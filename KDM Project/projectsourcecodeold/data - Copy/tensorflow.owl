<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/rashmi/ontologies/2017/7/rashmi#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://www.semanticweb.org/rashmi/ontologies/2017/7/rashmi#">
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Declaration>
        <Class IRI="CLASS"/>
    </Declaration>
    <Declaration>
        <Class IRI="FILE"/>
    </Declaration>
    <Declaration>
        <Class IRI="FUNCTION"/>
    </Declaration>
    <Declaration>
        <Class IRI="IMPORT"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseretainspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="arrayops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTotalVariationHandmade"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="biasedRandN"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="fileName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNormalizeMoments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ComplexGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computedxanddyx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="softmaxcrossentropy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Print"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="applymask1dreshapedtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInvalidKeepProb"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="withdependenciesdependencies"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maketensorarrayta"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stateops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="unweightedmoments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="constructsparsetensorsforsparsefeaturesfeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomcontrastimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ProdGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="crelufeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isstrictlyincreasingx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="call"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="createzeroarrayssize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="complexreal"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="localresources"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sortkeyinputindex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="lbetax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExitResult"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesToTensorList"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computeslicedimandshapefullshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="absolutedifference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExpandDimsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRealOnly"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computeaccidentalhitstrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IFFTGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="callfunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="NextIterationGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Ones(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorsummary"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="re"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dataflowops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="takemany"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="einsumreductiont0"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="divx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="opconvertedinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducesuminputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loggingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="combinedopconvertedinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogitslogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testResizeDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnxenttest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RandomUniform(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormBetaGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsInOuterContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="unstackvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="embeddingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fixedsizepartitionernumshards"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTwiceSaturationFused"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BiasAddGradV1unusedbiasop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getlosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertproperiterablevalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testVarGlobalGradient"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="hasClass"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="toint32x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZerosLike"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meshgrid*args"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MulGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truedivx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genscriptops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IndexedSlicesToTensorTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parseexamplerawserialized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AvgPool3DGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="safedivnumerator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="streamingsparsefalsepositiveatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="totalvariationnp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="subx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getpartitionedvariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SubGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetFunccls"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeImageWithCropOrPadTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testgradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="KeywordRequired"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ErfcGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="specificityatsensitivity"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testColocateGradients"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WeightedCrossEntropyTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="forwardloopexits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdefaultinitializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GenerateTestInputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="customgettergetter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setdiff1dx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDefaultDCTMethodIsIntegerFast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="softmaxlogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tearDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gensetops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testLeftRight"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomseed"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConv2D2x2Filter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SqrtGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cachingdevice"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testEmptyFails"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="resourcevariableops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AsTensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="useresource"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="inferenceref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="device"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTensorArguments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="applyindexedslicesgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComputeSampledLogitsShapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSparseMinimumGradunusedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meansquarederrorlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SwitchTestCase(TensorFlowTestCase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sufficientstatisticsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="precisionatthresholdslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablescopecount"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHessianInvalidDimension"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loglosslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="addchecknumericsops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkScaleDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="InvGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBasicGrayscaleToRGB"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="logpoissonloss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixDeterminantGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="HessianTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsesoftmaxcrossentropylabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RecordInput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddBackPropAccumulatedValue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDequantizeOp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="json"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="jsonformat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSyntheticFasterAlgorithm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SinGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSegmentSqrtNGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rankinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseMatMult1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getvariablescope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testUnderflow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBasicQint8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="errors"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="binaryopwrapperx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Exit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testcomplicatedshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="outercontext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="singleoffset"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomsaturationimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="xwplusbx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetWhileContextop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogOpGradientsop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FilterGradx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CheckAtLeast3DImageimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reportuninitializedvariablesvarlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testemptyrank1dynamicallocinputraisesoperror"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsemergespids"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorFlowTestCase"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MultiDeviceAddNtensorlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testemptyinputgivesallzerocounts"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="conv1dvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtwodimensionalpropershape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asnamelistnames"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testmultiplerandomaccumulatingupdatesresultsinrightdist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientsimpl"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="exponentialspaceeinsumequation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="weightedcrossentropywithlogitstargets"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SliceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="l2normalizex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializedvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PaddingFIFOQueue(QueueBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computegradientx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meanrelativeerrorlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Assertcondition"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testL2Normalize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="swapaxislogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="calcbiasaddflopsgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertrankin"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TestOpGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablescope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dequantizeoptest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genrandomops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ioops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tfBatchNormV1BW"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="histogramops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="HasAnyNotNoneGradsgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConditionalAccumulatorBase"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testMeanGlobalGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="convertflowstotensorarraystensorsortensorarrays"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetensordensematmulspa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nn"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="histogramopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MinGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="convert"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="insertmany"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="astypelistdtypes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dataflowgrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="histogramsummarytag"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="addlossloss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stringsplitsource"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genparsingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsesinglesequenceexamplerawserialized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stateops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="closevariablesubscopes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="padtoboundingboximage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dynamicrnnloopcell"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reversesequenceinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertgreaterx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCrop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="os"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="countconditionvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scanfn"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="functionName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="op"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReaderBase"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ComputeSampledLogitsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BigQueryReaderOpsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="applygrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stack"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="examplepb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="summaryops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExpGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getsinglevariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="flattenouterdimslogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBoundaryContinue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variables.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNormalizeMoments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asserthasshapex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="broadcastweightsweights"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="normalizesparseshapeshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertlessx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ioops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybeexpandlabelslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RemoveExternalControlEdges"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="localvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StripNode"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sets"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixSolveLsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GradientCheckerTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OverloadAllOperators"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="staticrankinactualrank"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FFT3DGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="listdiffx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sigmoidcrossentropy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AsInt32x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReduceLogSumExp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathgrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RandomNormal(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="InitializeValues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInvalidShapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dynamicrankinactualrank"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="streamingsparsefalsenegativeatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="conv2dtransposevalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="extrafeedsextrafeeddict"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignadd"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="util"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="serializestate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="svdtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="size"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StopGradientTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ProcessOutputTensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="opNormalizeMoments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="InvGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="takemanysparsefromtensorsmap"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SignGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAdjustNegativeHue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reverseseqinputseq"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="negx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsedensecwiseaddspt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FakeQuantWithMinMaxVarsGradientop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Collectval"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="repr"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="opSuffStats"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="astensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GroupControlDepsdev"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testExisting"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="removeundocumented"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="specialmathops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TileGradShapeop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gethandledeletergraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PendingCountgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="logpoissonlosstargets"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradstate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="QuantizeAndDequantizeGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="backprop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="graphutil"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="binaryopwrappersparsespx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RefMergeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustSaturationCpuAll"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SqrtGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setcustomgetter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computespecificityatsensitivitytp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="train"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="traceback"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConv2D2x2FilterStride2Same"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SetupAndRunBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="xrange"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ensurexentargsname"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogitsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DropoutTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAddCustomized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="graph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setinitializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reduceprodinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WholeFileReader(ReaderBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitionedvariables.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testadjustgammazero"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipbyvaluet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArray"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="embeddinglookupsparseparams"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixDiagGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Condit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setsimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducedshapeinputshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="readysize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="arrayops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CropAndResizeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gethandlemovergraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsesingleexampleserialized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormVarianceGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomcropvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZerosLikeForExit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCropAndPad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="session"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dividex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testError"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SqueezeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="glorotnormalinitializerseed"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mergesummaryinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="eval"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OverloadOperatoroperator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInputGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetruepositiveatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="countupto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNoOp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ImagGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="globalvariablesinitializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="remove"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="relulayerx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="printdifferencemode"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="unusedexits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="histogramops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RNNCell"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="outergradstate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dataflowops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computesizeofstrideddimshrink"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sessionops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFunctionGradientsWithGradFunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBadParams"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeBilinearBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nonemptylbeta"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftsignGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBoundaryStop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CTCLossGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SpaceToDepthGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getvariablename"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tfBatchNormV2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tfBatchNormV1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="croptoboundingboximage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AbsOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="HistogramFixedWidthTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPositiveDeltaUint8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AtanGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BiasAddGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GrayscaleToRGBTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="enqueue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testResizeUp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="confusionmatrixatthresholds"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="JpegTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDoubleContrastUint8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInValid"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="logsoftmax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="savefilename"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LgammaGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setcachingdevice"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="value"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArrayGatherGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetControlPivot"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustsaturation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gif"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MultiRNNCell"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SpaceToBatchNDGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="noop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="atrousconv2dvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="get"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradOnUnsupportedType"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="logsoftmaxlogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SelectGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="copysomethroughflatnewoutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="timesteptime"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="devicekeydev"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cond"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="specialmathops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConv2D1x1Filter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PadToBoundingBoxTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="paralleliterations"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="broadcastdynamicshapeshapex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AggregationMethod"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="attrvaluepb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializevariablesvarlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="poolinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rawrnncell"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parseexampleserialized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="VariableScope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustsaturationimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rungraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseAddGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TextLineReader(ReaderBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="switchdata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSegmentMinGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testlong"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPadding"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsLoopExitop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testValid"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentMinOrMaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="opsBatchNorm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ctclosslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testKeepDims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scopevals"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablescope.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asserttypetensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fromlistindex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustHueTf"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rbinaryopwrappery"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchNormBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fromprotovaluesdef"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormalizationx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reshapeifnecessarytensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GenerateReplicatedInputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsingops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOpsBetweenCut"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getpartitions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Variable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PngTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stringops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RealDivGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testUnusedOutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaximumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="copy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentMeanGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeBilinearOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StridedSliceGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertfloatdtypedtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="concatvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConjGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ControlFlowState"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SelectDistortedCropBoxTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RGBToGrayscale"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SplitGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maxpoolvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOpsBetweenSimple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SaveSliceInfo"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="swapmemory"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSampledSoftmaxLoss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testemptyrank2orgreaterinputgivesemptyoutputdynamicalloc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormMeanGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FractionalAvgPoolGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaybeAddControlDependency"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHalfSaturation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setpartitioner"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IFFT2DGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExitGradWhileContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="npNormalizeMoments"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setglobalstep"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsesinglesequenceexample"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="percentagebelowvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtwoupdatesonconstantinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DequantizeOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StopOpsfromops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IdentityReader(ReaderBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="linalggrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComplexMul"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="trainingref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientsys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCondContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scalarmulscalar"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Assert"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="flipleftrightimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertequalx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="opinputconverted"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipbynormt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gencontrolflowops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixDiagPartGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustgammaimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="erfx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rnncellimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="floordivx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sigmoid"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAddSimple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormbenchmark.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="underdeterminedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="originalnamescope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAcceptsRefs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testLogisticOutputMultiDim"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gethandlefeedergraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaxPoolGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WhileContext(ControlFlowContext)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensordota"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="falsenegativeslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fusedbatchnorm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitionershape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numerics.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="takegrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computegradientlistx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MinOrMaxGradientTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="audiosummarytag"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LoopCondGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="atrousconv2dtransposevalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="standardops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtwoupdatesonscalarinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapedDropout"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sensitivityatspecificity"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="historymap"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseDenseCwiseMulOrDivGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="create"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReshapeToInputop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asindexedslicesx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNaNGradFails"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="outputsize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SquaredDifferenceOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNonDifferentiableSwitchInWhileLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tupletensors"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBasicRGBToGrayscale"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReshapeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pred"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensordotaxesa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numpy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput2DInput1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsOpFreeop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shapeinternalinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="forwardindex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput2DInput0"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="normtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHessianVectorProduct"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BiasAddGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustContrastNp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGroupMultiDevice"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="recallatthresholdslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapeError"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="deferredexits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GifTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CondContext(ControlFlowContext)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="trainablevariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testEmptySucceeds"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DynamicStitchGradsop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConvertBetweenIntegerAndFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SplitBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CheckResultsa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientcheckertest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsefillemptyrowsspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComplexAbs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nangradunusedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="time"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genimageops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetGradsgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeImagesTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRandomContrast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustHueNp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="googletest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="checkputdtypes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meanabsoluteerrorlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ModTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBasic"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixBandPartGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjointeigvalstensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="logicalxorx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftmaxCrossEntropyWithLogitslogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHessian1Dmulti"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GatherNdGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Identitydata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FakeQuantWithMinMaxArgsGradientop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustSaturationCpu1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradients"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="splitbenchmark.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rot90"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="candidatesamplingops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FlipTransposeRotateTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MarkReachedOpsfromops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="UniformUnitScaling(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SimpleHTTPServer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="safemeanlosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertvariablesinitializedvarlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="softmaxcrossentropywithlogitssentinel"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertOpListEqual"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="flow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="toint64x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="division"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftmaxTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsesingleexamplerawserialized"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNon3DInput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTraining"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rootmeansquarederrorlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="specialmathopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAggregationMethodAccumulateN"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReduceTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="zerosshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reduceanyinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="globalnormtlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testinference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="calcdilation2dflopsgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZetaGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="len"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="candidatesamplingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustContrastTf"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="symbolicgradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="copyonethroughoutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TestRGBToGrayscale"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="padtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testLogisticOutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAxes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="squeezeinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybecopysomethrough"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DigammaGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="auclabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsereducesumspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CumsumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="barrierref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExitGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CentralCropTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="runtest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHalfSaturationFused"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ctcops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv2DTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computemeantotal"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FIFOQueue(QueueBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="transposeifnecessarytensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertnegativex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sequencemasklengths"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeMethod"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAggregationMethodAddN"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CosGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computesensitivityatspecificitytp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RoundGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnimpl"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConcatGradV2op"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DivideDelegateWithName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dequeue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddOp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fromprotocontextdef"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput4DInput012"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtwodimensionalarg"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LBetaTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="function"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="recallatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="emptylbeta"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DepthToSpaceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Template"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pywraptensorflow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GenerateUnorderedInputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="overdeterminedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testdimmismatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dequeueupto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meanvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="npSuffStats"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="arraygrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ContextTest(TensorFlowTestCase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="png"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializealltablesname"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tobfloat16x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AbsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSegmentMinGradientWithTies"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipbyglobalnormtlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRandomUpDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imaginput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isvariableinitializedref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="booleanmasktensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MiniMNISTTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EinsumTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BuildCondBranch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="squarex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="embeddings."/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignaddref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GenerateReversedInputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTotalVariationNumpy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RandomShuffleQueue(QueueBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArrayWriteGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="foldlfn"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHessian1D"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testL2NormalizeGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genloggingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ShapeTestCase(TensorFlowTestCase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatteradd"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatternddiv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testListDependencies"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="NextIterationdata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computegradientx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducejoinreductiondimsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomshufflevalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSuffStats"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nngrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SliceHelperVarvar"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="separableconv2dinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="test"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="graphpb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AcosGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asgraphelement"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="readupto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imageopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parsingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConvertBetweenInt16AndInt8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseread"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SquareGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="matrixsolvelsmatrix"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConvertImageTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imagegrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="del"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parallelstackvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkSimilar"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randombrightnessimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTruncateModInt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="compare"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computerecalltp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseprecisionatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignsubref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablesinitializervarlist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddValue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSuffStats"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="outputpackx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getsessionhandledata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetensortodensespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="concatbenchmark.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArraySplitGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatMulGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorHandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setoperationa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsTrainabletensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGlobalNormalization"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ControlFlowContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gencandidatesamplingops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CropAndResizeOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="perimagestandardizationimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPreventGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="branch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ProcessUnusedLoopExits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testZeroFraction"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="castx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="softmax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormGammaGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SetShapeInvariantsinputvars"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testWithBoundingBox"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gensparseops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="concat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PostProcessing"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scattermul"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="forwardsync"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genmathops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReverseSequenceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="choleskysolvechol"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="doGET"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rot90image"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseFeature("/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testZeroFractionEmpty"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Constant(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSegmentMeanGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertlessequalx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="QueueBase"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="onehotindices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="canonicalx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GenerateOrderedInputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsesplitkeywordrequired"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertcond"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IndexedSlicesToTensorvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FixedLenFeature(collections.namedtuple("/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRounding"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="compat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stridedsliceinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComplexConj"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertnonnegativex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="argmininput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="conditionunusedtime"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReadingSingleRowUsingFeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv3DGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asshapelistshapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormwithglobalnormalizationt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imagegrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="test"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="registervariablereadread"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="uniformcandidatesamplertrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOverflow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowgrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stackvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getsavesliceinfo"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rnn.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArrayScatterGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testWholeImageBoundingBox"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testsimple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="deprecated"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducemininputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="accuracylabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormoptensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulatorShapeinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixSolveGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FractionalMaxPoolGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFunctionGradientsBasic"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNInitializedWithShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="put"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tflogging"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesWithDenseShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="linalgops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="collections"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="functionalops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAcceptsIndexedSlices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="confusionmatrixlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdtypefromnestedlistslistortuple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustHueGpu"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSegmentSumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="whileloop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OnlyRealGradientsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="toproto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testinvalid"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogSoftmaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorflow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hiddenops.txt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ImageDimensions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="accumulatorref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shapecommons1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genresourcevariableops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PartitionInfo"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initialvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSampleDistortedBoundingBoxShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducemeaninputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPartialShapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHiddenBiasGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZerosLikeOutsideLoopop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ondevicefn"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computeauctp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isnondecreasingx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchNormWithGlobalNormalizationGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sessionops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="intTestData"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fullshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeImageWithCropOrPad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gather"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="deserializemanysparseserializedsparse"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="NegGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSoftmax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testWarnings"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LRNGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCmyk"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetOutputContextop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ctcbeamsearchdecoderinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imageops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="avgpoolvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFloorModInt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConvertBetweenInteger"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="checkops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitionedvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pyfuncfunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tracex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjusthueimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RintGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computemeaniouname"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StagingArea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sigmoidcrossentropywithlogitssentinel"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="splitvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseDenseCwiseMulGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SquaredDifferenceTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testemptyrank1inputraisesvalueerror"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RunMomentTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="close"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RsqrtGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="istensorx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="configpb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="forwardcontext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixTriangularSolveGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isterresourcehandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PackGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCropping"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFunctionGradientWithGradFuncAndRegistration"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput2DInput01"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="typespb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="accumulateninputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdiffformonotoniccomparisonx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtensorflowvsnumpy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="autopackinghelperlistortuple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="muldispatchx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stategrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReciprocalGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseminimumspa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="singleslicedim"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rnncellimpl"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReduceExplicitAxes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TanhGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CompilationEnabledInGradientTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pyfunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imagegradtest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Orthogonal(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reset"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetRealValue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="erosion2dvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WeightedCrossEntropy"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZeroFraction"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsereducesumsparsespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetodensesparseindices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rankinternalinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cloud"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StridedSliceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReductionDimsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="HandleNestedIndexedSlicesgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ScalarMulTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="createlocalname"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="bidirectionaldynamicrnncellfw"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SetGradgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseReduceSumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PrintGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reusevariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustSaturation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GatherGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TransposeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="divpython2x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SpaceToBatchGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dequeuemany"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TFRecordReader(ReaderBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="localvariablesinitializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomhueimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializeallvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="absx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormGradientInAllNeedConfigs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meanioulabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fixedunigramcandidatesamplertrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="bodytime"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustSaturationTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReadingMultipleRowsUsingColumns"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="convertimagedtypeimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imageops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesWithDynamicShapeGradientInWhileLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="regularizer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializershape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pivot"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BuildLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustSaturationGpu"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="hasImport"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="falsepositiveslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="absoluteimport"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="momentum"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="colorsys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testonedimensionalargdynamicalloc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFixed"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genioops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MeanGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseTensorDenseMatMulGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="npBatchNorm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="NormalizeMomentsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="glorotuniforminitializerseed"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseresetshapespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PowGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DiagGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TruncatedNormal(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDropout"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNegativeDelta"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getuniquevariablescopeprefix"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testutil"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkScaleUp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TruncateDivGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSquaredDifference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustHue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchDoubleContrast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scalarsummarytags"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BroadcastMul"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="importModuleName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SetUpQueuereader"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sharedresources"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReverseV2Gradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="purevariablescopenameorscope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="switchmap"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sampledsoftmaxlossweights"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sizeinternalinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="commonshapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genstringops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sets.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="averageError"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="safescalardivnumerator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSoftmaxCrossEntropyWithLogitsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddNextAndBackEdgem"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fiximageflipshapeimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="UnsortedSegmentSumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cumsumx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAdjustRandomHue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsefalsepositiveatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testColocateGradientsWithAggregationInMultipleDevices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="allsaveableobjects"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustContrastTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="weightsbroadcastops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExtractImagePatchesGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testoneupdateonconstantinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truncatednormalshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="subtractx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseplaceholderdtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numbers"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="linalgops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shouldRunOnGPU"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reportuninitializedresourcesresourcelist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSyntheticTwoChannelUint16"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsesoftmaxcrossentropywithlogitssentinel"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormGradImpl"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tablesinitializername"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variableopscopevalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SliceHelpertensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="depthwiseconv2dinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="NumpyPerImageWhitening"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EnterGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterupdate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AvgPoolGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="grayscaletorgbimages"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="multiplyx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="einsumequation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OpsBetweengraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SwitchGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testColocateGradientsWithAggregation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTupleDependencies"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PartitionedVariableIterator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="realinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseadda"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="momentsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CReluTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCompareGpuVsCpu"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="quantizedconvopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetLoopConstantEntervalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorflow.python.ops.nngrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initfromproto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="metricsimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SplitVGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="biasaddv1value"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="VarLenFeature"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftmaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIdempotentUpDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CreateDenseMaskAndBeginsizes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computetheoreticaljacobianx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testUniformImage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNTemplate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Expm1Gradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="removesqueezabledimensionspredictions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybenormalizex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CrossGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sdcaops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testMinGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="VerifyValues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertrankscondition"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assign"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="incompletesize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchToSpaceNDGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genarrayops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSoftmaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="div"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Check3DImageimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SigmoidGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="floatTestData"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjointEigV2Gradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setdtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="load"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MirrorPadGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FakeBigQueryServer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="restoreslicefilepattern"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComplexDiv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tanh"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="myopx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nntest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ShapeTensorshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDropoutPlaceholderKeepProb"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConcatGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="transposeimageimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="handle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertQuantizedArrayEquals"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FFTGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustBrightnessTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="UnpackGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stringops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testLogPoissonLoss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput4DInput123"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="checkenqueuedtypes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="withspacetobatchinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="L2LossGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNInitializedWithFirst"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="multinomiallogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsegrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RunMomentTestWithDynamicShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="constant"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsereorderspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="flipupdownimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterndupdate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="stategrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="statesize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchToSpaceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv2DBackpropInputGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSyntheticUint16"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorarrayops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="l2Normalize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testonedimensionalarg"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GroupTestCase(TensorFlowTestCase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="split"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="openvariablescope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetFuncGradients"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="centralcropimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computefansshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="warnings"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesGradientInCondInWhileLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="delete"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truegettername"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ctcgreedydecoderinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="relu6features"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OverrideBinaryOperatorHelperfunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getstridesanddilationratenumspatialdims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustSaturationNp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybeselectclassidlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scalelosseslosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="createtaname"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gethandlereadergraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradindex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="transposea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormpytensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truedivpython3x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConstructionNamed"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv2DGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ExtractInputShapesinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truepositiveslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setsizea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SquaredDifferenceGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterdiv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterndadd"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInt64Indices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapedDropoutShapeError"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="matrixtransposea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WithDependenciesTestCase(TensorFlowTestCase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getreaderkeyhandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MergeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="functionalops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="queueref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixSetDiagGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GradLoopState"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="inferstatedtypeexplicitdtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSynthetic"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReadAndCheckRowsUsingFeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="streamingsparsetruepositiveatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ImageDimensionsimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCompareBilinear"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="selectclassidids"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dropoutx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSampleDistortedBoundingBox"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBrightness"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AggregatedGradsgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="resourcevariableops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="roundx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="resizeimagewithcroporpadimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sliceinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArrayReadGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="convertvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="converttotensorsorsparsetensorsa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsereshapespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResourceVariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="movingaveragevariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertnonpositivex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SymGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MatrixInverseGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializelocalvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="generateArray"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapedDropoutCorrelation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentMinGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTwiceSaturation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rangestart"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNoDropoutFast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBasicQuint8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PartitionedVariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="precisionlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseSparseMaximumGradunusedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomuniformshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNInitializedWithMerge"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dequeuereturnvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="concat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testUnstableOutputShiftNone"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FillGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="embeddingops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="constantop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="histogramfixedwidthvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="biasadd"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rot180"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="todoublex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRandomFlipLeftRight"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTruncateModFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomflipupdownimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MomentsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CleanupFunc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdeleterkeyhandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shapeinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorflow.python.ops.tensorarraygrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tofloatx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setintersectiona"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="matmula"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DepthwiseConv2dNativeGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FuncRegistry"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="fromprotovariabledef"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseaverageprecisionatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scriptops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reg"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeNearestNeighborOpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FunctionGradientsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="copysomethroughcurrent"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseDenseCwiseAddGradunusedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterndmul"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testZeroLengthInput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetGradgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAcceptsConstant"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRandomLeftRight"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="checkops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testLogSoftmax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getpartitionedvariablename"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="featurestorawparamsfeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computeprecisiontp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testContrast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetGradSourceoportensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CropToBoundingBoxTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setuseresource"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomgammashape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SufficientStatisticsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="jpeg"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRot90GroupOrder"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="addsparsetotensorsmapspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EluGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertrankatleast"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="signx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtwodimensionalargdynamicalloc"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="negativex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Bodyi"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducejoininputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAdjustPositiveHue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computesampledlogitsweights"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variableopv2shape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput4DInput1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="biases."/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput4DInput3"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="correctemptyv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numerics"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutput4DInput0"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustbrightnessimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testUpDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EluGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeBilinearGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="topkinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IgammacGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="statesizewithprefixstatesize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="onesshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientsimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dynamicrnncell"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGroupOneDevice"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Inputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertrankcondition"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormKeepDims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="conv3dtransposevalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setregularizer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentMinOrMaxGradientTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="identity"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="movedimtoendtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="noregularizer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetoindicatorspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="floordiv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorarraygrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradsync"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MinOrMaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCompilationInGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="globalvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="resizeimagesimages"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="argparse"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradientAtZero"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="arraygrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FixedLenSequenceFeature(collections.namedtuple("/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignval"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="threading"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesToTensor"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="className"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="eyenumrows"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testtraining"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Enterdata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CumprodGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="spacetobatchinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConv2D1x2Filter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="init"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="math"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetWhileContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaxPool3DGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="XSquarePlusBcls"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setuniona"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hashlib"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FFTSizeForGradgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchNormalizationTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="allcandidatesamplertrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseTensorDenseAddGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testadjustgammagreaterone"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="WeightedMomentsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initvaluesfromproto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="spec"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gencloudops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testMaxGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorarraygrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DeviceKeydev"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getvariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNoConvert"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mulx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustHueBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="socketserver"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ctcops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="editdistancehypothesis"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nonatrousconvolutioninput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="resources.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testL2Loss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="decodeimagecontents"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CholeskyGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsegrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="printfunction"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="requiredspacetobatchpaddingsinputshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchMatMulop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getregularizationlosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IFFT3DGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertrankx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitioner"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="OpNames"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EnforceShapeInvariantmergevar"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BuildLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="readerref"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReluGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="takeindexedslicesgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TopKGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="weightedmomentsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SimpleColorRamp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loopfntime"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="itertools"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dtypes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FloorGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meancosinedistancelabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybesetdevicehandleop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AsinGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="XSquarePlusBGradientcls"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaybeCreateControlFlowStatebetweenoplist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="functools"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="varoffset"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomflipleftrightimage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mapfnfn"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFunctionGradientsComposition"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormArbitraryShapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddForwardLoopCounter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="supportsserialize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computerecalltruep"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genlinalgops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdevicenamehandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loopexits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDivideName"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsemaximumspa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tanhx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="EnterGradWhileContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="grad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rgbtograyscaleimages"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maxx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assignsub"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="trueassert"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSegmentMaxGradientWithTies"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSegmentMaxGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="myfuncx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scatterndsub"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initfromargs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="broadcaststaticshapeshapex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IgammaGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numrecordsproduced"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CheckNumericsGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LBetaTestGpu(LBetaTest)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNCELoss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomUniformAvoidAnchors"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computenumericjacobianx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="deprecation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="buildgraphdevice"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFloorModFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testadjustgammalessone"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Printinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SwitchRefOrTensordata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="localvariableinitialvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="foldrfn"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AccumulateNTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Zeros(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Condi"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BroadcastShapeop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConvertRowToExampleProtorow"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ErfGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FFT2DGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="saturatecastvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TanGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numaccumulated"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="argmaxinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormInputGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computegradienterrorx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isvariableinitializedvariable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CastGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genctcops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="clipbyaveragenormt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testInference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathgradtest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RefIdGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="parameterizedtruncatednormalshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RefNextIterationGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNoGradientForStringOutputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="atknamename"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DynamicPartitionGradsop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Check3DImage"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="weightsbroadcastops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertShapeInference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FloorDivGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="run"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sizeinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddBackPropLoopCounter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseDenseCwiseDivGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Enter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitionaxes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SigmoidGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNormArbitraryShapes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="embeddinglookupparams"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CropToBoundingBox"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pendingexitscount"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getrawhandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsLoopConstantEnterop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentSumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradcontext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="biasaddvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientchecker"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AsTensorListx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="name"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="converttosparsetensorsspinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loggingops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testadjustgammaone"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="createpartitionedvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="genstateops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BroadcastMulvec"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="inputpackx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="contextlib"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseMatMulGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AsListx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FakeQuantWithMinMaxVarsPerChannelGradientop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PerImageWhiteningTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorarrayops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="UpdatePendingAndEnqueueReadygrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="normalizemomentscounts"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testNestedGather"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gettotallossaddregularizationlosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="allvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="addmanysparsetotensorsmapspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsSwitchop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meantensorvalues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="expanddimsinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="densevartotensorvar"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradFromResizeToLargerInBothDims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MirrorPadGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="write"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaybeCompileop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BigQueryRequestHandler"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TotalVariationTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="meanpairwisesquarederrorlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducemaxinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertRaises"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getsummaryop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensordotreshapea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="names"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="condpred"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testResizeUpBicubic"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cosinedistance"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAggregationMethodTree"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="restorestate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="addninputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAdjustRandomSaturation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DefaultGradYsgradys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getlocalvariable*args"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDivideInt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="accumulatenbenchmark.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="toproto"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="checkpng"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tuple"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getdefaultvariablestore"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Dilation2DGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="QuantizedOutputToFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gennnops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="calcmatmulflopsgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="StripGraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ceil"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowpb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="npweightedsumv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="L2LossTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReductionIndices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gendataflowops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MaximumMinimumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sigmoidx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rnnstep"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="autopackingconversionfunctionv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorConversionFunctionv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="powx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ShapeLessThanOrEqualshape1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAddSimpleGPU"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddBackPropAccumulator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getyieldop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseaverageprecisionatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mergeelementshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGlobalGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getvariablelist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="summarypb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reduceallinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Bodyit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="template.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DivGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="xwplusbv1x"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imagesummarytag"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maybecolocatewithop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAccumulateN"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustcontrastimages"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="calcconvflopsgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="whileloopcond"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testoneupdateonconstant2dinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIndexedSlicesWithShapeGradientInWhileLoop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="zerosliketensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="next"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BatchQueue(QueueBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GetGradState"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reducelogsumexpinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nngrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReduceInvalidAxis"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSoftmaxBiasGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="deletesessiontensorhandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSoftmaxWeightGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparseconcataxis"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablescopenameorscope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHalfContrastUint8"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variablepb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradRandomBoxes"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSingletonIndexedSlices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogSumExpTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testAcceptsTensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReverseGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nodedefpb2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertgreaterequalx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="template"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="customgetter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getmoverkeyfeeder"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogSoftmaxTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mathops]"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sqrtx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Log1pGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeNearestNeighborGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradients.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="recalllabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertbroadcastableweights"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RsqrtGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSumTensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="and"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkResize"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradFromResizeToSmallerInBothDims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRGBToHSVRoundTrip"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BuildAndTestMiniMNIST"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftmaxCrossEntropyWithLogitsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="isnumerictensortensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOpsBetweenCycle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="read"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RoundTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reuse"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFunctionGradientWithRegistration"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PythonGradientcls"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="convolutioninput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="learnedunigramcandidatesamplertrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="countnonzeroinputtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="pythonio"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConditionalAccumulator(ConditionalAccumulatorBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="calcdepthwiseconvflopsgraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mergeallsummarieskey"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testBatchNorm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="VarianceScaling(Initializer)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hessiansys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="equalx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConcatGradHelperop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testemptyrank2orgreaterinputgivesemptyoutput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="HessianVectorProductTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="casepredfnpairs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ComputeSampledLogitsNP"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRealDiv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testTranspose"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="str"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="unstack"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="safeshapedivx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setUp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchnormslowtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PreventGradientTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnbatchnormtest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsetransposespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RunBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PolygammaGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testlength1lastdimensionresultsinone"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hasvalidnonscalarshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TileGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GradientsTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PriorityQueue(QueueBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="totalvariationimages"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="varscope"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReduceAllDims"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="tensorutil"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variableopshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PadToBoundingBox"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testL2NormalizeDimArray"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ncelossweights"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="exitdata"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Relu6Gradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="controlflowopstest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReluGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SoftplusGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="imageopsimpl.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIdempotentLeftRight"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="zerostate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setdifferencea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nextuniquetoken"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRot90NumpyEquivalence"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="asindexedsliceslistinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="randomnormalshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="zerofractionvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="metrics.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsefalsenegativeatklabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConv2D2x2FilterStride2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="partitions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="variableaxissizepartitioner"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RunWeightedMomentTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testSyntheticTwoChannel"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertintegerx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ConcatBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarksplit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="division`."/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="confusionmatrix.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TanhGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testinputisplaceholder"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="f2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="f3"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="f1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="skipcommonstackelementsstacktrace"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="GatherInputstoops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsemaska"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddNGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseReorderGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="reversetensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="loguniformcandidatesamplertrueclasses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="converttensorarraystoflowstensorsortensorarrays"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Barrier"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjointeigtensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ResizeBicubicBenchmark"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="VerifyGeneratedGradientsgrads"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="runopa"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DivAndModTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FixControlInputsAndContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGather"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="linalggrad.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hingelosslabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testDoubleContrastFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="batchtospaceinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FusedBatchNormGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testPositiveDeltaFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="FixedLengthRecordReader(ReaderBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numpresentlosses"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="DiagPartGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Stepi"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddOpInternal"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv2DBackpropFilterGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="six"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="onesliketensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="rot270"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ComplexAbsGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="removesqueezabledimensions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustHueTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="random"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IsLoopSwitchop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsesoftmaxspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="buildcase"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="mergeinputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="serializemanysparsespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGroupNoDevices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numworkunitscompleted"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapedDropoutUnknownShape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getreturnvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="cumprodx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initops"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="PadGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initvariablev"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReadingMultipleRowsUsingFeatures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="removesqueezabledimensions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testResizeDownArea"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="case"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testFloorDivGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="group*inputs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scattersub"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="numrelevantlabels"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="scriptops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConvertBetweenFloat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="softmaxlogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="minmaxvariablepartitionermaxpartitions"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RandomFlipTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="iter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddBackPropIndexedSlicesAccumulator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hessianvectorproductys"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computeweightedloss"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="LogPoissonLossTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustHueCpu1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="jit"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="IdGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="modelvariables"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testGradients"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnops.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nn.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testReductionIndices2"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="next"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testIdempotentTranspose"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computei"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SparseConditionalAccumulator(ConditionalAccumulatorBase)"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="serializesparsespinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="L2NormalizeTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ComputeSampledLogitsTF"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="insert"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hasvaliddimsweightsshape"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="getsessiontensorhandle"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RefEnterGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RGBToHSVTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="verifytensorallfinitet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="truediv"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testConsistent"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddForwardAccumulator"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="group"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="readvalue"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="productt"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="computesampledlogits"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOpsBetweenUnreachable"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="adjustorig"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="shutdown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testOutputMultiDim"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testHiddenWeightGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="concatv2values"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="TensorArrayConcatGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv3DBackpropFilterGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dogatherparams"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="totalsizeshapevalues"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="hasFunction"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Conv3DBackpropInputGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="CeilGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="enqueuemany"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ReciprocalGradGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkconcat"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="minx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="confusionmatrix"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="doOutputTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sparsedensetruedivspindices"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapeInference"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="hessians"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testWhileContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="SegmentMaxGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testComputeSampledLogitsValues"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="placeholderdtype"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="badgradunusedop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testCompareNearestNeighbor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="Initializer"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="expandandtiletensor"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AddWhileContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="wherecondition"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="registerhandlefeedergraph"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="conjx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="nnfusedbatchnormtest.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testRandomFlipUpDown"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="dataflowgrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustGamma"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ScatterNdGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="gradientchecker.py"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="MinimumGradop"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkbatchnorm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="setsavesliceinfo"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testStopGradient"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="BigQueryReader"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="converttosparsetensorspinput"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="RealGrad"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="benchmarkAdjustHueCpuAll"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="maketemplatename"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="initializeresourcesresourcelist"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertReturns"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="ZeroFractionTest"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="sumrowsx"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="testShapeIsCorrectAfterOp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="assertpositivex"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="AdjustSaturationBenchmark"/>
    </Declaration>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AbsOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AccumulateNBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AccumulateNTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddBackPropAccumulatedValue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddBackPropAccumulator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddBackPropIndexedSlicesAccumulator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddBackPropLoopCounter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddForwardAccumulator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddForwardLoopCounter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddName"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddOp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddValue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddWhileContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustBrightnessTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustContrastTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustGamma"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustGamma"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustHueBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustHueTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustSaturationBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustSaturationTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AdjustSaturationTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="AggregationMethod"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="AggregationMethod"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AsInt32x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="Assert"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Assertcondition"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Barrier"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BatchNormBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BatchNormalizationTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BigQueryReader"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BigQueryReaderOpsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BigQueryReaderOpsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BigQueryRequestHandler"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Bodyi"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Bodyit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BuildCondBranch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BuildLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CReluTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CReluTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CentralCropTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CleanupFunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CompilationEnabledInGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CompilationEnabledInGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ComputeSampledLogitsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ConcatBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Condi"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Condit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ConditionalAccumulatorBase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ConditionalAccumulatorBase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ControlFlowContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ControlFlowContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ControlFlowState"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Conv2DTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ConvertImageTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CropAndResizeOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CropAndResizeOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CropToBoundingBoxTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="DequantizeOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DeviceKeydev"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="DivAndModTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="DivideDelegateWithName"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="DropoutTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="EinsumTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="EinsumTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Enter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="EnterGradWhileContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Exit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExitGradWhileContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExitResult"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FakeBigQueryServer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FlipTransposeRotateTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FuncRegistry"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FunctionGradientsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetControlPivot"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetGradState"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetRealValue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetWhileContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GifTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GradLoopState"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GradientCheckerTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GradientsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GrayscaleToRGBTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="HessianTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="HessianVectorProductTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="HistogramFixedWidthTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="IndexedSlicesToTensorTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Initializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsLoopExitop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsLoopSwitchop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsSwitchop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="JpegTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="KeywordRequired"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="L2LossTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="L2NormalizeTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LBetaTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LogPoissonLossTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LogPoissonLossTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LogSoftmaxTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LogSumExpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaybeCreateControlFlowStatebetweenoplist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MinOrMaxGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MinOrMaxGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MiniMNISTTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ModTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MomentsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MomentsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="MultiRNNCell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="NormalizeMomentsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="NormalizeMomentsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="OnlyRealGradientsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PadToBoundingBoxTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PartitionedVariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PartitionedVariableIterator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PartitionedVariableIterator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PerImageWhiteningTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PngTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PostProcessing"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PreventGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="Print"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Printinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ProcessUnusedLoopExits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="QueueBase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RGBToHSVTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RandomFlipTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ReaderBase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RecordInput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RecordInput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ReduceTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeBicubicBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeBilinearBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeBilinearOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeImageWithCropOrPadTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeImagesTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeMethod"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResizeNearestNeighborOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ResourceVariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RoundTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RoundTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RunMomentTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RunMomentTestWithDynamicShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RunWeightedMomentTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SaveSliceInfo"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ScalarMulTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SegmentMinOrMaxGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SelectDistortedCropBoxTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogitsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="SimpleHTTPServer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SoftmaxTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SplitBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SquaredDifferenceOpTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SquaredDifferenceTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="StagingArea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="StopGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="StopGradientTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SufficientStatisticsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Template"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TensorArray"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="TensorFlowTestCase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TensorHandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TotalVariationTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="VarLenFeature"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Variable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="VariableScope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="VariableScope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WeightedCrossEntropyTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WeightedMomentsTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="XSquarePlusBGradientcls"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="XSquarePlusBcls"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ZeroFractionTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ZerosLike"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ZerosLikeForExit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ZerosLikeOutsideLoopop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AbsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AccumulateNInitializedWithFirst"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AccumulateNInitializedWithMerge"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AccumulateNInitializedWithShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AccumulateNTemplate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AccumulatorShapeinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AcosGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddNGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddNextAndBackEdgem"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AddOpInternal"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AdjointEigV2Gradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AggregatedGradsgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AsListx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AsTensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AsTensorListx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AsinGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AtanGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AvgPool3DGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="AvgPoolGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BatchMatMulop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BatchNormWithGlobalNormalizationGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BatchToSpaceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BatchToSpaceNDGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BiasAddGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BiasAddGradV1unusedbiasop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BiasAddGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="BroadcastMul"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BroadcastMulvec"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BroadcastShapeop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BuildAndTestMiniMNIST"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="BuildLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CTCLossGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CastGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CeilGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="Check3DImage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Check3DImageimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CheckAtLeast3DImageimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CheckNumericsGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CheckResultsa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CholeskyGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Collectval"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ComplexAbsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ComplexGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ComputeSampledLogitsNP"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ComputeSampledLogitsTF"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ConcatGradHelperop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ConcatGradV2op"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ConcatGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ConjGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv2DBackpropFilterGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv2DBackpropInputGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv2DGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv3DBackpropFilterGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv3DBackpropInputGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Conv3DGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ConvertRowToExampleProtorow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CosGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CreateDenseMaskAndBeginsizes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CropAndResizeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CropToBoundingBox"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CrossGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CumprodGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="CumsumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DefaultGradYsgradys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DepthToSpaceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DepthwiseConv2dNativeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DiagGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DiagPartGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DigammaGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Dilation2DGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DivGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DynamicPartitionGradsop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="DynamicStitchGradsop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="EluGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="EluGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="EnforceShapeInvariantmergevar"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="EnterGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Enterdata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ErfGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ErfcGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExitGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExpGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExpandDimsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Expm1Gradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExtractImagePatchesGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ExtractInputShapesinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FFT2DGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FFT3DGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FFTGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FFTSizeForGradgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FakeQuantWithMinMaxArgsGradientop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FakeQuantWithMinMaxVarsGradientop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FakeQuantWithMinMaxVarsPerChannelGradientop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FillGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FilterGradx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FixControlInputsAndContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FloorDivGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FloorGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FractionalAvgPoolGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FractionalMaxPoolGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="FusedBatchNormGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GatherGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GatherInputstoops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GatherNdGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GenerateOrderedInputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GenerateReplicatedInputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GenerateReversedInputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GenerateTestInputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GenerateUnorderedInputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetFuncGradients"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetFunccls"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetGradSourceoportensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetGradgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetGradsgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetLoopConstantEntervalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetOutputContextop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GetWhileContextop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="GroupControlDepsdev"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="HandleNestedIndexedSlicesgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="HasAnyNotNoneGradsgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IFFT2DGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IFFT3DGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IFFTGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IdGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Identitydata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IgammaGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IgammacGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ImagGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="ImageDimensions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ImageDimensionsimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IndexedSlicesToTensorvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="InitializeValues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Inputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="InvGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="InvGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsInOuterContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsLoopConstantEnterop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsOpFreeop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="IsTrainabletensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="L2LossGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LRNGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LgammaGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Log1pGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LogGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LogOpGradientsop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LogSoftmaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="LoopCondGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MarkReachedOpsfromops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatMulGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixBandPartGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixDeterminantGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixDiagGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixDiagPartGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixInverseGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixSetDiagGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixSolveGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixSolveLsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MatrixTriangularSolveGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaxPool3DGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaxPoolGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaximumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaximumMinimumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaybeAddControlDependency"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MaybeCompileop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MeanGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MergeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MinGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MinOrMaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MinimumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MirrorPadGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MirrorPadGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MulGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="MultiDeviceAddNtensorlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="NegGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="NextIterationGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="NextIterationdata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="NumpyPerImageWhitening"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="OpNames"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="OpsBetweengraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="OverloadAllOperators"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="OverloadOperatoroperator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="OverrideBinaryOperatorHelperfunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PackGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PadGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PadToBoundingBox"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PartitionInfo"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PendingCountgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PolygammaGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PowGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PrintGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ProcessOutputTensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ProdGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="PythonGradientcls"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="QuantizeAndDequantizeGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="QuantizedOutputToFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RGBToGrayscale"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RNNCell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReadAndCheckRowsUsingFeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RealDivGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RealGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReciprocalGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReciprocalGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReductionDimsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RefEnterGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RefIdGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RefMergeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RefNextIterationGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Relu6Gradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReluGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReluGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RemoveExternalControlEdges"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReshapeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReshapeToInputop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ResizeBilinearGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ResizeImageWithCropOrPad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ResizeNearestNeighborGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReverseGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReverseSequenceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ReverseV2Gradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RintGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RoundGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RsqrtGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RsqrtGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="RunBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ScatterNdGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SegmentMaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SegmentMeanGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SegmentMinGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SegmentMinOrMaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SegmentSumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SelectGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SetGradgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SetShapeInvariantsinputvars"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SetUpQueuereader"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SetupAndRunBenchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ShapeLessThanOrEqualshape1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ShapeTensorshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SigmoidCrossEntropyWithLogitslogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SigmoidGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SigmoidGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SignGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SimpleColorRamp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SinGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SliceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SliceHelperVarvar"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SliceHelpertensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SoftmaxCrossEntropyWithLogitsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SoftmaxCrossEntropyWithLogitslogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SoftmaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SoftplusGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SoftsignGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SpaceToBatchGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SpaceToBatchNDGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SpaceToDepthGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseAddGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseDenseCwiseAddGradunusedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseDenseCwiseDivGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseDenseCwiseMulGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseDenseCwiseMulOrDivGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseMatMulGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseMatMult1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseReduceSumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseReorderGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSegmentMeanGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSegmentSqrtNGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSegmentSumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSoftmaxCrossEntropyWithLogitsGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSoftmaxGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSparseMaximumGradunusedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseSparseMinimumGradunusedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseTensorDenseAddGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SparseTensorDenseMatMulGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SplitGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SplitVGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SqrtGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SqrtGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SquareGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SquaredDifferenceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SqueezeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="Stepi"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="StopOpsfromops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="StridedSliceGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="StridedSliceGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="StripGraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="StripNode"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SubGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SwitchGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SwitchRefOrTensordata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="SymGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TanGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TanhGradGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TanhGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArrayConcatGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArrayGatherGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArrayReadGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArrayScatterGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArraySplitGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorArrayWriteGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TensorConversionFunctionv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TestOpGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TestRGBToGrayscale"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TileGradShapeop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TileGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TopKGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TransposeGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="TruncateDivGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="UnpackGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="UnsortedSegmentSumGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="UpdatePendingAndEnqueueReadygrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="VerifyGeneratedGradientsgrads"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="VerifyValues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="WeightedCrossEntropy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ZeroFraction"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ZetaGradop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="call"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="del"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="div"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="floordiv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="init"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="init"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="iter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="len"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="next"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="repr"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="str"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truediv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="addmanysparsetotensorsmapspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="addsparsetotensorsmapspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjointeigtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjointeigvalstensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustContrastNp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustContrastTf"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustHueNp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustHueTf"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustSaturationNp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustsaturation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="allsaveableobjects"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="applymask1dreshapedtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asgraphelement"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asindexedsliceslistinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asindexedslicesx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asnamelistnames"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asshapelistshapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="astypelistdtypes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertOpListEqual"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertQuantizedArrayEquals"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertRaises"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertReturns"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertShapeInference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertfloatdtypedtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asserthasshapex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertrankcondition"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertrankscondition"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertcond"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="atknamename"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="autopackingconversionfunctionv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="autopackinghelperlistortuple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="badgradunusedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustHue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustSaturation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkResize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="biasedRandN"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="buildcase"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="calcbiasaddflopsgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="calcconvflopsgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="calcdepthwiseconvflopsgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="calcdilation2dflopsgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="calcmatmulflopsgraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="callfunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="checkenqueuedtypes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="checkputdtypes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computedxanddyx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computefansshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computegradientlistx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computegradientx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computenumericjacobianx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="computesampledlogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computesampledlogitsweights"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computesizeofstrideddimshrink"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computeslicedimandshapefullshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computetheoreticaljacobianx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="concat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="confusionmatrixatthresholds"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="constructsparsetensorsforsparsefeaturesfeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="convert"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="convertflowstotensorarraystensorsortensorarrays"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="converttensorarraystoflowstensorsortensorarrays"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="converttosparsetensorspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="converttosparsetensorsspinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="converttotensorsorsparsetensorsa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="convertvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="copyonethroughoutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="copysomethroughcurrent"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="copysomethroughflatnewoutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="correctemptyv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="countconditionvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="createlocalname"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="createtaname"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="createzeroarrayssize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="densevartotensorvar"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dequeuereturnvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="divpython2x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dogatherparams"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dynamicrankinactualrank"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dynamicrnnloopcell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="einsumreductiont0"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ensurexentargsname"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="expandandtiletensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="exponentialspaceeinsumequation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="extrafeedsextrafeeddict"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="featurestorawparamsfeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="flattenouterdimslogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fromprotovaluesdef"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="generateArray"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdefaultinitializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdefaultvariablestore"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdeleterkeyhandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdevicenamehandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdiffformonotoniccomparisonx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getdtypefromnestedlistslistortuple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gethandledeletergraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gethandlefeedergraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gethandlemovergraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gethandlereadergraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getmoverkeyfeeder"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getpartitionedvariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getpartitionedvariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getpartitionedvariablename"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getpartitions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getreaderkeyhandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getreturnvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getsavesliceinfo"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getsinglevariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getstridesanddilationratenumspatialdims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getuniquevariablescopeprefix"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getvariablelist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gif"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="hasvaliddimsweightsshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="hasvalidnonscalarshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="hessianvectorproductys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="inferstatedtypeexplicitdtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="inferenceref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initfromargs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initfromproto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initvaluesfromproto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializershape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="istensorx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="jpeg"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="l2Normalize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="localvariableinitialvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="logpoissonloss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="logsoftmax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maketensorarrayta"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybecolocatewithop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybecopysomethrough"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybeexpandlabelslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybeselectclassidlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybesetdevicehandleop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mergeelementshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="movedimtoendtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="muldispatchx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mulx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="nangradunusedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="negx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="nextuniquetoken"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="nonatrousconvolutioninput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="normalizesparseshapeshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="npBatchNorm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="npNormalizeMoments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="npSuffStats"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="npweightedsumv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="numpresentlosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="numrelevantlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ondevicefn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="opNormalizeMoments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="opSuffStats"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="opsBatchNorm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="overdeterminedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parseexamplerawserialized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parsesingleexamplerawserialized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parsesinglesequenceexamplerawserialized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="partitionaxes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="partitionershape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="png"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="productt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="purevariablescopenameorscope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomUniformAvoidAnchors"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducejoinreductiondimsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="registerhandlefeedergraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="registervariablereadread"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="removesqueezabledimensions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="removesqueezabledimensionspredictions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reshapeifnecessarytensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="restoreslicefilepattern"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reverseseqinputseq"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rnnstep"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rot180"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rot270"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rot90"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rungraph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="runopa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="safedivnumerator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="safemeanlosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="safescalardivnumerator"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="safeshapedivx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="savefilename"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scalelosseslosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scopevals"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="selectclassidids"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setoperationa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setsavesliceinfo"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shapecommons1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="skipcommonstackelementsstacktrace"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="softmax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="softmaxlogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseaverageprecisionatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsedensetruedivspindices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsefalsenegativeatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsefalsepositiveatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetruepositiveatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="statesizewithprefixstatesize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="staticrankinactualrank"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="streamingsparsefalsenegativeatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="streamingsparsefalsepositiveatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="streamingsparsetruepositiveatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="subx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sumrowsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="swapaxislogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="symbolicgradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="takemanysparsefromtensorsmap"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tensordotaxesa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tensordotreshapea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="test"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormArbitraryShapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormGradientInAllNeedConfigs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBrightness"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testContrast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDequantizeOp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGlobalGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNormalizeMoments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSampleDistortedBoundingBox"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSuffStats"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testgradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testinference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtensorflowvsnumpy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtraining"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tfBatchNormV1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tfBatchNormV1BW"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tfBatchNormV2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="timesteptime"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="toproto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="totalsizeshapevalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="totalvariationnp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="trainingref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="transposeifnecessarytensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truegettername"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truedivpython3x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="underdeterminedop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="unweightedmoments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="absolutedifference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="absoluteimport"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="absx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="accumulatenbenchmark.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="accumulateninputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="accumulatorref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="accuracylabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="addchecknumericsops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="addlossloss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="addninputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustbrightnessimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustcontrastimages"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustgammaimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjusthueimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustsaturationimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="adjustorig"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="allcandidatesamplertrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="allvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="and"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="applygrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="applyindexedslicesgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="argmaxinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="argmininput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="argparse"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="arraygrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="arraygrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="arrayops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="arrayops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="astensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertbroadcastableweights"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertequalx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertgreaterequalx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertgreaterx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertintegerx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertlessequalx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertlessx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertnegativex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertnonnegativex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertnonpositivex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertpositivex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertproperiterablevalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertrankatleast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertrankin"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertrankx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="asserttypetensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assertvariablesinitializedvarlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assign"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="assign"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignadd"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="assignadd"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignaddref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignsub"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="assignsub"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignsubref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="assignval"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="atrousconv2dtransposevalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="atrousconv2dvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="attrvaluepb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="auclabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="audiosummarytag"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="averageError"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="avgpoolvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="backprop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="barrierref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="batchnormbenchmark.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchnormoptensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchnormpytensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchnormslowtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchnormwithglobalnormalizationt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchnormalizationx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="batchtospaceinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="benchmark"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAccumulateN"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustHueCpu1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustHueCpuAll"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustHueGpu"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustSaturationCpu1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustSaturationCpuAll"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkAdjustSaturationGpu"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkScaleDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkScaleUp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkSimilar"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkbatchnorm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarkconcat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="benchmarksplit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="biasadd"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="biasaddv1value"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="biasaddvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="biases."/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="bidirectionaldynamicrnncellfw"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="binaryopwrappersparsespx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="binaryopwrapperx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="bodytime"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="booleanmasktensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="branch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="broadcastdynamicshapeshapex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="broadcaststaticshapeshapex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="broadcastweightsweights"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="buildgraphdevice"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="cachingdevice"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="candidatesamplingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="candidatesamplingops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="canonicalx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="case"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="casepredfnpairs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="castx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="ceil"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="centralcropimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="checkops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="checkops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="checkpng"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="choleskysolvechol"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="clipbyaveragenormt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="clipbyglobalnormtlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="clipbynormt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="clipbyvaluet"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="clipops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="clipops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="close"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="closevariablesubscopes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="cloud"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="collections"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="colorsys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="combinedopconvertedinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="commonshapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="compare"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="compat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="complexreal"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computeaccidentalhitstrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computeauctp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computegradienterrorx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computegradientx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computemeaniouname"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computemeantotal"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computeprecisiontp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computerecalltp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computerecalltruep"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computesensitivityatspecificitytp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computespecificityatsensitivitytp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computeweightedloss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="computei"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="concat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="concatbenchmark.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="concatv2values"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="concatvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="cond"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="conditionunusedtime"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="condpred"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="configpb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="confusionmatrix"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="confusionmatrix.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="confusionmatrixlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="conjx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="constant"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="constantop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="contextlib"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="controlflowgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="controlflowgrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="controlflowops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="controlflowops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="controlflowopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="controlflowpb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="conv1dvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="conv2dtransposevalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="conv3dtransposevalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="convertimagedtypeimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="convolutioninput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="copy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="cosinedistance"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="countnonzeroinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="countupto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="countupto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="create"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="createpartitionedvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="crelufeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="croptoboundingboximage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ctcbeamsearchdecoderinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ctcgreedydecoderinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ctclosslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="ctcops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="ctcops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="cumprodx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="cumsumx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="customgetter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="customgettergetter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="dataflowgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="dataflowgrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="dataflowops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="dataflowops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="decodeimagecontents"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="deferredexits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="delete"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="deletesessiontensorhandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="deprecated"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="deprecation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="depthwiseconv2dinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="dequantizeoptest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dequeue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dequeuemany"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dequeueupto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="deserializemanysparseserializedsparse"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="device"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="device"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="devicekeydev"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dividex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="division"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="divx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="doOutputTest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="doGET"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dropoutx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dtypes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="dtypes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="dynamicrnncell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="editdistancehypothesis"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="einsumequation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="embeddinglookupsparseparams"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="embeddinglookupparams"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="embeddingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="embeddingops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="embeddings."/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="embeddings."/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="emptylbeta"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="enqueue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="enqueuemany"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="equalx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="erfx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="erosion2dvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="errors"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="eval"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="eval"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="examplepb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="exitdata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="expanddimsinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="eyenumrows"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="f1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="f2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="f3"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="falsenegativeslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="falsepositiveslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fiximageflipshapeimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fixedsizepartitionernumshards"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fixedunigramcandidatesamplertrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="flipleftrightimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="flipupdownimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="floatTestData"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="floordivx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="flow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="foldlfn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="foldrfn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="forwardcontext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="forwardindex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="forwardloopexits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="forwardsync"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fromlistindex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fromprotocontextdef"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fromprotovariabledef"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fullshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="function"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="functionalops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="functionalops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="functools"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="fusedbatchnorm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gather"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genarrayops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gencandidatesamplingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gencloudops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gencontrolflowops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genctcops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gendataflowops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genimageops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genioops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genlinalgops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genloggingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genmathops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gennnops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genparsingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genrandomops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genresourcevariableops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genscriptops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gensetops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gensparseops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genstateops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="genstringops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="get"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getlosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getrawhandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getregularizationlosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getsessionhandledata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getsessiontensorhandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getsummaryop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="getsummaryop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gettotallossaddregularizationlosses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getvariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getvariablescope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getvariablename"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getyieldop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="globalnormtlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="globalvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="globalvariablesinitializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="glorotnormalinitializerseed"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="glorotuniforminitializerseed"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="googletest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="grad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gradcontext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gradindex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gradstate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gradsync"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gradientchecker"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="gradientchecker.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="gradientcheckertest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gradients"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="gradients.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="gradientsimpl"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="gradientsimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="gradientstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="gradientsys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="graph"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="graphpb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="graphutil"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="grayscaletorgbimages"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="group"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="handle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="hashlib"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="hessians"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="hessiansys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="hiddenops.txt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="hingelosslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="histogramfixedwidthvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="histogramops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="histogramops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="histogramopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="histogramsummarytag"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="historymap"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="identity"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="imagegrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="imagegrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="imagegradtest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="imageops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="imageops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="imageopsimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="imageopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="imagesummarytag"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="imaginput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="incompletesize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="initops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="initops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initvariablev"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initialvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializealltablesname"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializeallvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializelocalvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializeresourcesresourcelist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializevariablesvarlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializedvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="initializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="inputpackx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="insert"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="insertmany"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="intTestData"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="ioops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="ioops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isnondecreasingx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isnumerictensortensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isstrictlyincreasingx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isvariableinitializedref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isvariableinitializedvariable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="isterresourcehandle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="itertools"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="jit"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="json"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="jsonformat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="l2normalizex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="lbetax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="learnedunigramcandidatesamplertrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="linalggrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="linalggrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="linalgops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="linalgops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="listdiffx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="load"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="localresources"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="localvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="localvariablesinitializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="loglosslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="logpoissonlosstargets"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="logsoftmaxlogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="loguniformcandidatesamplertrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="loggingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="loggingops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="logicalxorx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="loopexits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="loopfntime"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maketemplatename"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mapfnfn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="math"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="mathgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="mathgrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="mathgradtest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="mathops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="mathops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="mathopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="matmula"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="matrixsolvelsmatrix"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="matrixtransposea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maxpoolvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maxx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="maybenormalizex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meanabsoluteerrorlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meancosinedistancelabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meanioulabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meanpairwisesquarederrorlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meanrelativeerrorlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meansquarederrorlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meantensorvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meanvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mergeallsummarieskey"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mergesummaryinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="mergeinputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="metrics.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="metricsimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="minmaxvariablepartitionermaxpartitions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="minx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="modelvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="momentsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="momentum"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="movingaveragevariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="multinomiallogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="multiplyx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="myfuncx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="myopx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="name"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="names"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="ncelossweights"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="negativex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="next"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nn.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nnbatchnormtest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nnfusedbatchnormtest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nngrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nngrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nnimpl"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nnimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nnops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nnops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nntest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="nnxenttest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="noop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="noregularizer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="nodedefpb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="nonemptylbeta"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="normalizemomentscounts"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="normtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="numaccumulated"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="numrecordsproduced"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="numworkunitscompleted"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="numbers"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="numerics"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="numerics.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="numpy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="onehotindices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="onesliketensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="onesshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="op"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="opconvertedinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="openvariablescope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="opinputconverted"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="ops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="originalnamescope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="os"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="outercontext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="outergradstate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="outputpackx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="outputsize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="padtoboundingboximage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="padtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="paralleliterations"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parallelstackvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parameterizedtruncatednormalshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parseexampleserialized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parsesingleexampleserialized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="parsesinglesequenceexample"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="parsingops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="parsingops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="partitionedvariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="partitionedvariables.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="partitioner"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="partitions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="pendingexitscount"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="pendingexitscount"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="perimagestandardizationimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="percentagebelowvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="pivot"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="placeholderdtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="poolinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="powx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="precisionatthresholdslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="precisionlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="pred"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="printdifferencemode"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="printfunction"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="put"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="pyfunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="pyfuncfunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="pythonio"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="pywraptensorflow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="quantizedconvopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="queueref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rbinaryopwrappery"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="random"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randombrightnessimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomcontrastimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomcropvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomflipleftrightimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomflipupdownimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomgammashape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomhueimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomnormalshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="randomops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="randomops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomsaturationimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="randomseed"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomshufflevalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="randomuniformshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rangestart"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rankinternalinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rankinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rawrnncell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="re"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="read"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="readupto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="readvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="readvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="readerref"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="readysize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="realinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="recallatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="recallatthresholdslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="recalllabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reduceallinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reduceanyinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducejoininputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducelogsumexpinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducemaxinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducemeaninputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducemininputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reduceprodinputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducesuminputtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reducedshapeinputshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reg"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="regularizer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="relu6features"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="relulayerx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="remove"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="removesqueezabledimensions"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="removeundocumented"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reportuninitializedresourcesresourcelist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reportuninitializedvariablesvarlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="requiredspacetobatchpaddingsinputshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reset"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="resizeimagewithcroporpadimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="resizeimagesimages"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="resourcevariableops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="resourcevariableops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="resources.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="restorestate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reuse"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reusevariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reversesequenceinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="reversetensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rgbtograyscaleimages"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="rnn.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="rnncellimpl"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="rnncellimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rootmeansquarederrorlabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="rot90image"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="roundx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="run"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="runtest"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sampledsoftmaxlossweights"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="saturatecastvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scalarmulscalar"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scalarsummarytags"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scanfn"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scatter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatteradd"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterdiv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scattermul"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterndadd"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatternddiv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterndmul"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterndsub"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterndupdate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="scattersub"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scattersub"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scatterupdate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="scriptops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="scriptops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="sdcaops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sensitivityatspecificity"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="separableconv2dinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sequencemasklengths"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="serializemanysparsespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="serializesparsespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="serializestate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="session"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sessionops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="sessionops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setUp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setcachingdevice"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setcustomgetter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setdifferencea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setdtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setglobalstep"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setinitializer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setintersectiona"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setpartitioner"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setregularizer"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setsizea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setuniona"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setuseresource"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="setdiff1dx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sets"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="sets.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="setsimpl.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shapeinternalinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shapeinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sharedresources"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shouldRunOnGPU"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="shutdown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sigmoid"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sigmoidcrossentropy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sigmoidcrossentropywithlogitssentinel"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sigmoidx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="signx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="singleoffset"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="singleslicedim"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="six"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="size"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="size"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sizeinternalinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sizeinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sliceinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="socketserver"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="softmaxcrossentropy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="softmaxcrossentropywithlogitssentinel"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="softmaxlogits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sortkeyinputindex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="spacetobatchinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseadda"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseaverageprecisionatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseconcataxis"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsedensecwiseaddspt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsefillemptyrowsspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sparsegrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="sparsegrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsemaska"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsemaximumspa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsemergespids"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseminimumspa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sparseops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="sparseops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseplaceholderdtype"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseprecisionatklabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseread"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsereducesumsparsespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsereducesumspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsereorderspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseresetshapespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsereshapespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparseretainspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsesoftmaxcrossentropywithlogitssentinel"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsesoftmaxcrossentropylabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsesoftmaxspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsesplitkeywordrequired"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sparsetensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetensordensematmulspa"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetensortodensespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetodensesparseindices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetoindicatorspinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sparsetransposespinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="spec"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="specialmathops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="specialmathops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="specialmathopstest.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="specificityatsensitivity"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="split"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="splitbenchmark.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="splitvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sqrtx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="squarex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="squeezeinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="stack"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="stackvalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="standardops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="stategrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="stategrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="stateops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="stateops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="statesize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="stridedsliceinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="stringops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="stringops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="stringsplitsource"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="subtractx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="sufficientstatisticsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="summaryops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="summarypb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="supportsserialize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="svdtensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="swapmemory"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="switchmap"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="switchdata"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="sys"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tablesinitializername"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="takegrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="takeindexedslicesgrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="takemany"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tanh"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tanhx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tearDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="template"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="template.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorarraygrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="tensorarraygrad.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorarrayops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="tensorarrayops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tensorsummary"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorutil"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tensordota"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorflow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorflow.python.ops.nngrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tensorflow.python.ops.tensorarraygrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="test"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="test"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAcceptsConstant"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAcceptsIndexedSlices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAcceptsRefs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAcceptsTensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAddCustomized"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAddSimple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAddSimpleGPU"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAdjustNegativeHue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAdjustPositiveHue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAdjustRandomHue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAdjustRandomSaturation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAggregationMethodAccumulateN"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAggregationMethodAddN"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAggregationMethodTree"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testAxes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBadParams"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBasic"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBasicGrayscaleToRGB"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBasicQint8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBasicQuint8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBasicRGBToGrayscale"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchDoubleContrast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNorm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormArbitraryShapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormBetaGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormGammaGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormGradImpl"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormInputGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormKeepDims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormMeanGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBatchNormVarianceGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBoundaryContinue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testBoundaryStop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCmyk"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testColocateGradients"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testColocateGradientsWithAggregation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testColocateGradientsWithAggregationInMultipleDevices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCompareBilinear"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCompareGpuVsCpu"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCompareNearestNeighbor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCompilationInGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComplexAbs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComplexConj"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComplexDiv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComplexMul"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComputeSampledLogitsShapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testComputeSampledLogitsValues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCondContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConsistent"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConstructionNamed"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConv2D1x1Filter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConv2D1x2Filter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConv2D2x2Filter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConv2D2x2FilterStride2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConv2D2x2FilterStride2Same"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConvertBetweenFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConvertBetweenInt16AndInt8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConvertBetweenInteger"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testConvertBetweenIntegerAndFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCrop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCropAndPad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testCropping"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDefaultDCTMethodIsIntegerFast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDivideInt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDivideName"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDoubleContrastFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDoubleContrastUint8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDropout"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testDropoutPlaceholderKeepProb"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testEmptyFails"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testEmptySucceeds"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testError"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testExisting"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFixed"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFloorDivGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFloorModFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFloorModInt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFunctionGradientWithGradFuncAndRegistration"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFunctionGradientWithRegistration"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFunctionGradientsBasic"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFunctionGradientsComposition"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testFunctionGradientsWithGradFunc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGather"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGlobalNormalization"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGrad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradFromResizeToLargerInBothDims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradFromResizeToSmallerInBothDims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradOnUnsupportedType"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradRandomBoxes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradientAtZero"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGradients"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGroupMultiDevice"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGroupNoDevices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testGroupOneDevice"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHalfContrastUint8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHalfSaturation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHalfSaturationFused"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHessian1D"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHessian1Dmulti"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHessianInvalidDimension"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHessianVectorProduct"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHiddenBiasGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testHiddenWeightGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIdempotentLeftRight"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIdempotentTranspose"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIdempotentUpDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInValid"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesGradientInCondInWhileLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesToTensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesToTensorList"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesWithDenseShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesWithDynamicShapeGradientInWhileLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testIndexedSlicesWithShapeGradientInWhileLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInputGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInt64Indices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInvalidKeepProb"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testInvalidShapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testKeepDims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testL2Loss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testL2Normalize"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testL2NormalizeDimArray"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testL2NormalizeGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testLeftRight"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testListDependencies"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testLogPoissonLoss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testLogSoftmax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testLogisticOutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testLogisticOutputMultiDim"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testMaxGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testMeanGlobalGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testMinGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNCELoss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNaNGradFails"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNegativeDelta"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNestedGather"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNoConvert"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNoDropoutFast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNoGradientForStringOutputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNoOp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNon3DInput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNonDifferentiableSwitchInWhileLoop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testNormalizeMoments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOpsBetweenCut"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOpsBetweenCycle"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOpsBetweenSimple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOpsBetweenUnreachable"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput2DInput0"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput2DInput01"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput2DInput1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput4DInput0"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput4DInput012"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput4DInput1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput4DInput123"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutput4DInput3"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOutputMultiDim"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testOverflow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPad"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPadding"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPartialShapes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPositiveDeltaFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPositiveDeltaUint8"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testPreventGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRGBToHSVRoundTrip"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRandomContrast"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRandomFlipLeftRight"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRandomFlipUpDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRandomLeftRight"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRandomUpDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReadingMultipleRowsUsingColumns"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReadingMultipleRowsUsingFeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReadingSingleRowUsingFeatures"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRealDiv"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRealOnly"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReduceAllDims"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReduceExplicitAxes"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReduceInvalidAxis"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReduceLogSumExp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReductionIndices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testReductionIndices2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testResizeDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testResizeDownArea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testResizeUp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testResizeUpBicubic"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRot90GroupOrder"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRot90NumpyEquivalence"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testRounding"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSampleDistortedBoundingBoxShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSampledSoftmaxLoss"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSegmentMaxGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSegmentMaxGradientWithTies"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSegmentMinGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSegmentMinGradientWithTies"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapeError"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapeInference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapeIsCorrectAfterOp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapedDropout"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapedDropoutCorrelation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapedDropoutShapeError"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testShapedDropoutUnknownShape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSingletonIndexedSlices"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSoftmax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSoftmaxBiasGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSoftmaxWeightGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSquaredDifference"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testStopGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSuffStats"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSumTensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSynthetic"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSyntheticFasterAlgorithm"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSyntheticTwoChannel"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSyntheticTwoChannelUint16"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testSyntheticUint16"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTensorArguments"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTotalVariationHandmade"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTotalVariationNumpy"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTraining"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTranspose"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTruncateModFloat"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTruncateModInt"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTupleDependencies"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTwiceSaturation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testTwiceSaturationFused"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testUnderflow"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testUniformImage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testUnstableOutputShiftNone"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testUnusedOutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testUpDown"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testValid"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testVarGlobalGradient"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testWarnings"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testWhileContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testWholeImageBoundingBox"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testWithBoundingBox"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testZeroFraction"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testZeroFractionEmpty"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testZeroLengthInput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testadjustgammagreaterone"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testadjustgammalessone"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testadjustgammaone"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testadjustgammazero"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testcomplicatedshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testdimmismatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testemptyinputgivesallzerocounts"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testemptyrank1dynamicallocinputraisesoperror"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testemptyrank1inputraisesvalueerror"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testemptyrank2orgreaterinputgivesemptyoutput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testemptyrank2orgreaterinputgivesemptyoutputdynamicalloc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testinputisplaceholder"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testinvalid"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testlength1lastdimensionresultsinone"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testlong"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testmultiplerandomaccumulatingupdatesresultsinrightdist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testonedimensionalarg"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testonedimensionalargdynamicalloc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testoneupdateonconstant2dinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testoneupdateonconstantinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="testops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testsimple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtwodimensionalarg"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtwodimensionalargdynamicalloc"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtwodimensionalpropershape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtwoupdatesonconstantinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="testtwoupdatesonscalarinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="testutil"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tflogging"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="threading"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="time"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tobfloat16x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="todoublex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tofloatx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="toint32x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="toint64x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="toproto"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="topkinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="totalvariationimages"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="traceback"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tracex"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="train"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="trainablevariables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="transposeimageimage"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="transposea"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="trueassert"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truepositiveslabels"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truedivx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="truncatednormalshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="tuple"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="tupletensors"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="typespb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="uniformcandidatesamplertrueclasses"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="unstack"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="unstackvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="unusedexits"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="useresource"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="util"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="value"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="varoffset"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="varscope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variableaxissizepartitioner"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variableopscopevalues"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variableopv2shape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variableopshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="variablepb2"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variablescope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="variablescope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="variablescope.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variablescopecount"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variablescopenameorscope"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="variables"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="variables.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="variablesinitializervarlist"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="verifytensorallfinitet"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="warnings"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="weightedcrossentropywithlogitstargets"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="weightedmomentsx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="weightsbroadcastops"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FILE"/>
        <NamedIndividual IRI="weightsbroadcastops.py"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="wherecondition"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="whileloop"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="whileloopcond"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="withdependenciesdependencies"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="withspacetobatchinput"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="write"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="xrange"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="xwplusbv1x"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="xwplusbx"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="zerofractionvalue"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="zerostate"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="zerosliketensor"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="zerosshape"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="BatchQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="CondContext(ControlFlowContext)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ConditionalAccumulator(ConditionalAccumulatorBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Constant(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ContextTest(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FIFOQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FixedLenFeature(collections.namedtuple("/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FixedLenFeature(collections.namedtuple("/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FixedLenSequenceFeature(collections.namedtuple("/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="FixedLengthRecordReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="GroupTestCase(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="IdentityReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="LBetaTestGpu(LBetaTest)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Ones(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Ones(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Orthogonal(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PaddingFIFOQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="PriorityQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RandomNormal(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RandomShuffleQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RandomShuffleQueue(QueueBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="RandomUniform(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="ShapeTestCase(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SparseConditionalAccumulator(ConditionalAccumulatorBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SparseFeature("/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="SwitchTestCase(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TFRecordReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TextLineReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="TruncatedNormal(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="UniformUnitScaling(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="VarianceScaling(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="VarianceScaling(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WhileContext(ControlFlowContext)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WholeFileReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WholeFileReader(ReaderBase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WithDependenciesTestCase(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="WithDependenciesTestCase(TensorFlowTestCase)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="CLASS"/>
        <NamedIndividual IRI="Zeros(Initializer)"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="division`."/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="getlocalvariable*args"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="group*inputs"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="IMPORT"/>
        <NamedIndividual IRI="mathops]"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="FUNCTION"/>
        <NamedIndividual IRI="meshgrid*args"/>
    </ClassAssertion>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="hasClass"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="hasFunction"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="hasImport"/>
    </FunctionalObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="hasClass"/>
        <Class IRI="FILE"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="hasFunction"/>
        <Class IRI="FILE"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="hasImport"/>
        <Class IRI="FILE"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="hasClass"/>
        <Class IRI="CLASS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="hasFunction"/>
        <Class IRI="FUNCTION"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="hasImport"/>
        <Class IRI="IMPORT"/>
    </ObjectPropertyRange>
    <DataPropertyDomain>
        <DataProperty IRI="className"/>
        <Class IRI="CLASS"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="fileName"/>
        <Class IRI="FILE"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="functionName"/>
        <Class IRI="FUNCTION"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="importModuleName"/>
        <Class IRI="IMPORT"/>
    </DataPropertyDomain>
    <DataPropertyRange>
        <DataProperty IRI="className"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="fileName"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="functionName"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="importModuleName"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
</Ontology>



<!-- Generated by the OWL API (version 5.1.0.2017-03-29T23:31:42Z) https://github.com/owlcs/owlapi/ -->


