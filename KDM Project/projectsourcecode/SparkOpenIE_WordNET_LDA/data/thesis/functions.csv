FileName,Functions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/accumulate_n_benchmark.py,"_AccumulateNTemplate(self,,","_AccumulateNInitializedWithFirst(self,,","_AccumulateNInitializedWithMerge(self,,","_AccumulateNInitializedWithShape(self,,","_GenerateUnorderedInputs(self,,","_GenerateReplicatedInputs(self,,","_GenerateOrderedInputs(self,,","_GenerateReversedInputs(self,,","_SetupAndRunBenchmark(self,,","_RunBenchmark(self,,",benchmarkAccumulateN(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/array_grad.py,"_PackGrad(op,,","_UnpackGrad(op,,","_ConcatGradHelper(op,,","_CreateDenseMaskAndBegin(sizes,,","_ExtractInputShapes(inputs):,","_ConcatGrad(op,,","_ConcatGradV2(op,,","_SliceGrad(op,,","_StridedSliceGrad(op,,","_StridedSliceGradGrad(op,,","_SplitGrad(op,,","_SplitVGrad(op,,","_DiagGrad(_,,","_DiagPartGrad(_,,","_MatrixDiagGrad(_,,","_MatrixDiagPartGrad(op,,","_MatrixSetDiagGrad(op,,","_MatrixBandPartGrad(op,,","_FillGrad(_,,","_GatherGrad(op,,","_GatherNdGrad(op,,","_CheckNumericsGrad(_,,","_IdGrad(_,,","_RefIdGrad(_,,","_ReshapeGrad(op,,","_ReshapeToInput(op,,","_ExpandDimsGrad(op,,","_SqueezeGrad(op,,","_TransposeGrad(op,,","_TileGrad(op,,","_PadGrad(op,,","_ReverseSequenceGrad(op,,","_ReverseGrad(op,,","_ReverseV2Grad(op,,","_SpaceToBatchGrad(op,,","_SpaceToBatchNDGrad(op,,","_BatchToSpaceGrad(op,,","_BatchToSpaceNDGrad(op,,","_SpaceToDepthGrad(op,,","_DepthToSpaceGrad(op,,","_MirrorPadGrad(op,,","_MirrorPadGradGrad(op,,","_QuantizeAndDequantizeGrad(_,,","_ExtractImagePatchesGrad(op,,","_ScatterNdGrad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/array_ops.py,"expand_dims(input,,","listdiff(x,,","setdiff1d(x,,","broadcast_dynamic_shape(shape_x,,","broadcast_static_shape(shape_x,,","shape(input,,","shape_internal(input,,","size(input,,","size_internal(input,,","rank(input,,","rank_internal(input,,","_SliceHelper(tensor,,","slice(input_,,","strided_slice(input_,,","assign(val):,","_SliceHelperVar(var,,","parallel_stack(values,,","stack(values,,","_autopacking_helper(list_or_tuple,,","_get_dtype_from_nested_lists(list_or_tuple):,","_autopacking_conversion_function(v,,","unstack(value,,","concat_v2(values,,","concat(values,,","boolean_mask(tensor,,","_apply_mask_1d(reshaped_tensor,,","sparse_mask(a,,","split(value,,","transpose(a,,","matrix_transpose(a,,","zeros(shape,,","zeros_like(tensor,,","ones_like(tensor,,","ones(shape,,","placeholder(dtype,,","_normalize_sparse_shape(shape,,","sparse_placeholder(dtype,,","pad(tensor,,","meshgrid(*args,,","_compute_size_of_strided_dim(shrink,,","canonical(x,,","_TileGradShape(op):,","edit_distance(hypothesis,,","_FakeQuantWithMinMaxArgsGradient(op,,","_FakeQuantWithMinMaxVarsGradient(op,,","_FakeQuantWithMinMaxVarsPerChannelGradient(op,,","required_space_to_batch_paddings(input_shape,,","space_to_batch(input,,","batch_to_space(input,,","one_hot(indices,,","sequence_mask(lengths,,","squeeze(input,,","where(condition,,","reverse(tensor,,","reverse_sequence(input,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/batch_norm_benchmark.py,"batch_norm_op(tensor,,","batch_norm_py(tensor,,","batch_norm_slow(tensor,,","build_graph(device,,","print_difference(mode,,","_run_graph(self,,",benchmark_batch_norm(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/candidate_sampling_ops.py,"uniform_candidate_sampler(true_classes,,","log_uniform_candidate_sampler(true_classes,,","learned_unigram_candidate_sampler(true_classes,,","fixed_unigram_candidate_sampler(true_classes,,","all_candidate_sampler(true_classes,,","compute_accidental_hits(true_classes,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/check_ops.py,"assert_proper_iterable(values):,","assert_negative(x,,","assert_positive(x,,","assert_non_negative(x,,","assert_non_positive(x,,","assert_equal(x,,","assert_less(x,,","assert_less_equal(x,,","assert_greater(x,,","assert_greater_equal(x,,","_assert_rank_condition(,","assert_rank(x,,","assert_rank_at_least(,","_static_rank_in(actual_rank,,","_dynamic_rank_in(actual_rank,,","_assert_ranks_condition(,","assert_rank_in(,","assert_integer(x,,","assert_type(tensor,,","_get_diff_for_monotonic_comparison(x):,","is_numeric_tensor(tensor):,","is_non_decreasing(x,,","is_strictly_increasing(x,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/clip_ops.py,"clip_by_value(t,,","clip_by_norm(t,,","global_norm(t_list,,","clip_by_global_norm(t_list,,","clip_by_average_norm(t,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/concat_benchmark.py,"build_graph(device,,","_run_graph(self,,",benchmark_concat(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/confusion_matrix.py,"remove_squeezable_dimensions(,","confusion_matrix(labels,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/control_flow_grad.py,"_SwitchGrad(op,,","_MergeGrad(op,,","_RefMergeGrad(op,,","_ExitGrad(op,,","_NextIterationGrad(_,,","_RefNextIterationGrad(_,,","_EnterGrad(op,,","_RefEnterGrad(op,,",_LoopCondGrad(_):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/control_flow_ops.py,"Assert(condition,,","true_assert():,","_Identity(data,,","_NextIteration(data,,","_Enter(data,,","exit(data,,","switch(data,,","_SwitchRefOrTensor(data,,","merge(inputs,,","_convert_tensorarrays_to_flows(tensors_or_tensor_arrays):,","_make_tensor_array(ta,,","_convert_flows_to_tensorarrays(tensors_or_tensorarrays,,","_IsLoopConstantEnter(op):,","_GetLoopConstantEnter(value):,","_GetOutputContext(op):,","_ShapeLessThanOrEqual(shape1,,","_SetShapeInvariants(input_vars,,","_EnforceShapeInvariant(merge_var,,","_AddNextAndBackEdge(m,,","__init__(self,,","outer_grad_state(self):,","forward_context(self):,","forward_index(self):,","forward_sync(self):,","grad_context(self):,","grad_index(self):,","grad_sync(self):,","history_map(self):,","switch_map(self):,","unused_exits(self):,","deferred_exits(self):,","forward_loop_exits(self):,","pending_exits_count(self):,","pending_exits_count(self,,","AddForwardAccumulator(self,,","AddBackPropAccumulatedValue(self,,","GetRealValue(self,,","_GetWhileContext(op):,","__init__(self):,","GetGradState(self,,","ProcessUnusedLoopExits(self,,","EnterGradWhileContext(self,,","ExitGradWhileContext(self,,","AddWhileContext(self,,","ZerosLikeForExit(self,,","ZerosLike(self,,","PostProcessing(self):,","MaybeCreateControlFlowState(between_op_list,,","IsSwitch(op):,","IsLoopExit(op):,","IsLoopSwitch(op):,","ZerosLikeOutsideLoop(op,,","__init__(self,,","_init_values_from_proto(self,,","outer_context(self):,","grad_state(self):,","back_prop(self):,","_to_proto(self,,","_from_proto(values_def,,","AddName(self,,","Enter(self):,","Exit(self):,","ExitResult(self,,","GetWhileContext(self):,","_IsInOuterContext(self,,","_RemoveExternalControlEdges(self,,","__init__(self,,","_init_from_proto(self,,","name(self):,","pred(self):,","pivot(self):,","branch(self):,","grad_state(self):,","back_prop(self):,","GetControlPivot(self):,","to_proto(self,,","from_proto(context_def,,","AddValue(self,,","AddOp(self,,","_AddOpInternal(self,,","_ProcessOutputTensor(self,,","BuildCondBranch(self,,","cond(pred,,","f1():,","f2():,","__init__(self,,","_init_from_args(self,,","_init_from_proto(self,,","name(self):,","parallel_iterations(self):,","back_prop(self):,","swap_memory(self):,","pivot(self):,","loop_exits(self):,","grad_state(self):,","to_proto(self,,","from_proto(context_def,,","GetWhileContext(self):,","GetControlPivot(self):,","AddValue(self,,","AddOp(self,,","_AddOpInternal(self,,","_MaybeAddControlDependency(self,,","_IsOpFree(op):,","AddForwardLoopCounter(self,,","AddBackPropLoopCounter(self,,","AddBackPropAccumulator(self,,","AddBackPropIndexedSlicesAccumulator(self,,","_InitializeValues(self,,","_BuildLoop(self,,","BuildLoop(self,,","_FixControlInputsAndContext(self,,","while_loop(cond,,","_AsTensorList(x,,","_CheckResults(a,,","with_dependencies(dependencies,,","_GroupControlDeps(dev,,","group(*inputs,,","device_key(dev):,","tuple(tensors,,","case(pred_fn_pairs,,","f1():,","f2():,","f3():,","_correct_empty(v):,",_build_case():,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/control_flow_ops_test.py,"_StripNode(self,,","_StripGraph(self,,","testGroup_NoDevices(self):,","testGroup_OneDevice(self):,","testGroup_MultiDevice(self):,","testShape(self):,","testTupleDependencies(self):,","testListDependencies(self):,","testIndexedSlicesWithDenseShape(self):,","testIndexedSlicesGradient(self):,","Cond(it,,","Body(it,,","testIndexedSlicesGradientInCondInWhileLoop(self):,","Cond(it,,","Body(it,,","testIndexedSlicesWithShapeGradientInWhileLoop(self):,","Cond(i,,","Body(i,,","testIndexedSlicesWithDynamicShapeGradientInWhileLoop(self):,","Cond(i,,","Body(i,,","testCondContext(self):,",testWhileContext(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/ctc_ops.py,"ctc_loss(labels,,","_CTCLossGrad(op,,","ctc_greedy_decoder(inputs,,","ctc_beam_search_decoder(inputs,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/data_flow_grad.py,"_DynamicPartitionGrads(op,,","_DynamicStitchGrads(op,,",AsInt32(x):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/data_flow_ops.py,"_as_type_list(dtypes):,","_as_shape_list(shapes,,","_as_name_list(names,,","_shape_common(s1,,","__init__(self,,","from_list(index,,","queue_ref(self):,","name(self):,","dtypes(self):,","shapes(self):,","names(self):,","_check_enqueue_dtypes(self,,","_scope_vals(self,,","enqueue(self,,","enqueue_many(self,,","_dequeue_return_value(self,,","dequeue(self,,","dequeue_many(self,,","dequeue_up_to(self,,","close(self,,","size(self,,","__init__(self,,","__init__(self,,","__init__(self,,","__init__(self,,","__init__(self,,","barrier_ref(self):,","name(self):,","insert_many(self,,","take_many(self,,","close(self,,","ready_size(self,,","incomplete_size(self,,","initialize_all_tables(name=""init_all_tables""):,","tables_initializer(name=""init_all_tables""):,","__init__(self,,","accumulator_ref(self):,","name(self):,","dtype(self):,","num_accumulated(self,,","set_global_step(self,,","__init__(self,,","apply_grad(self,,","take_grad(self,,","__init__(self,,","apply_indexed_slices_grad(self,,","apply_grad(self,,","take_grad(self,,","take_indexed_slices_grad(self,,","__init__(self,,","name(self):,","dtypes(self):,","shapes(self):,","names(self):,","_check_put_dtypes(self,,","_scope_vals(self,,","put(self,,","_get_return_value(self,,","get(self,,","__init__(self,,",get_yield_op(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/dequantize_op_test.py,"__init__(self,,","_testDequantizeOp(self,,","testBasicQuint8(self):,",testBasicQint8(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/embedding_ops.py,"_do_gather(params,,","embedding_lookup(params,,","maybe_normalize(x):,","embedding_lookup_sparse(params,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/functional_ops.py,"foldl(fn,,","compute(i,,","foldr(fn,,","compute(i,,","map_fn(fn,,","input_pack(x):,","output_pack(x):,","compute(i,,","scan(fn,,","input_pack(x):,","output_pack(x):,","compute(i,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/gradients.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/gradients_impl.py,"_IndexedSlicesToTensor(value,,","_MarkReachedOps(from_ops,,","_GatherInputs(to_ops,,","_PendingCount(graph,,","_AsList(x):,","_DefaultGradYs(grad_ys,,","_IsTrainable(tensor):,","_VerifyGeneratedGradients(grads,,","_StopOps(from_ops,,","_maybe_colocate_with(op,,","_SymGrad(op,,","_MaybeCompile(op,,","gradients(ys,,","_HasAnyNotNoneGrads(grads,,","_UpdatePendingAndEnqueueReady(grads,,","_SetGrad(grads,,","_GetGrad(grads,,","_GetGrads(grads,,","_HandleNestedIndexedSlices(grad):,","_AccumulatorShape(inputs):,","_LogOpGradients(op,,","_FilterGrad(x):,","_MultiDeviceAddN(tensor_list):,","DeviceKey(dev):,","_AggregatedGrads(grads,,","_hessian_vector_product(ys,,","hessians(ys,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/gradients_test.py,"_OpsBetween(graph,,","_OpNames(self,,","_assertOpListEqual(self,,","testOpsBetweenSimple(self):,","testOpsBetweenUnreachable(self):,","testOpsBetweenCut(self):,","testOpsBetweenCycle(self):,","testGradients(self):,","testUnusedOutput(self):,","testColocateGradients(self):,","testColocateGradientsWithAggregation(self):,","testColocateGradientsWithAggregationInMultipleDevices(self):,","testBoundaryStop(self):,","testBoundaryContinue(self):,","testAggregationMethodAccumulateN(self):,","testAggregationMethodAddN(self):,","testAggregationMethodTree(self):,","testNoGradientForStringOutputs(self):,","_TestOpGrad(_,,","testSingletonIndexedSlices(self):,","testNonDifferentiableSwitchInWhileLoop(self):,","_Step(i,,","XSquarePlusB(cls,,","XSquarePlusBGradient(cls,,","_PythonGradient(cls,,","_GetFunc(cls,,","_GetFuncGradients(self,,","testFunctionGradientsBasic(self):,","testFunctionGradientsComposition(self):,","testFunctionGradientsWithGradFunc(self):,","testFunctionGradientWithRegistration(self):,","testFunctionGradientWithGradFuncAndRegistration(self):,","testStopGradient(self):,","testPreventGradient(self):,","testHessianVectorProduct(self):,","testHessian1D(self):,","testHessian1D_multi(self):,","testHessianInvalidDimension(self):,","testIndexedSlicesToTensor(self):,","testIndexedSlicesToTensorList(self):,","testInt64Indices(self):,","testWarnings(self):,","testRealOnly(self):,",testCompilationInGradient(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/gradient_checker.py,"_product(t):,","_extra_feeds(extra_feed_dict,,","_compute_theoretical_jacobian(x,,","_compute_numeric_jacobian(x,,","_compute_dx_and_dy(x,,","_compute_gradient(x,,","_compute_gradient_list(x,,","compute_gradient(x,,","compute_gradient_error(x,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/gradient_checker_test.py,"_bad_grad(unused_op,,","_nan_grad(unused_op,,","testAddSimple(self):,","testAddSimpleGPU(self):,","testAddCustomized(self):,","testGather(self):,","testNestedGather(self):,","testComplexMul(self):,","testComplexConj(self):,","testEmptySucceeds(self):,","testEmptyFails(self):,","testNaNGradFails(self):,","_BuildAndTestMiniMNIST(self,,","testInputGradient(self):,","testHiddenWeightGradient(self):,","testHiddenBiasGradient(self):,","testSoftmaxWeightGradient(self):,",testSoftmaxBiasGradient(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/hidden_ops.txt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/histogram_ops.py,"histogram_fixed_width(values,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/histogram_ops_test.py,"setUp(self):,","test_empty_input_gives_all_zero_counts(self):,","test_one_update_on_constant_input(self):,","test_one_update_on_constant_2d_input(self):,","test_two_updates_on_constant_input(self):,","test_two_updates_on_scalar_input(self):,",test_multiple_random_accumulating_updates_results_in_right_dist(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/image_grad.py,"_ResizeNearestNeighborGrad(op,,","_ResizeBilinearGrad(op,,","_CropAndResizeGrad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/image_grad_test.py,"testShapeIsCorrectAfterOp(self):,","testGradFromResizeToLargerInBothDims(self):,","testGradFromResizeToSmallerInBothDims(self):,","testCompareGpuVsCpu(self):,","testShapeIsCorrectAfterOp(self):,","testGradFromResizeToLargerInBothDims(self):,","testGradFromResizeToSmallerInBothDims(self):,","testGradOnUnsupportedType(self):,","testCompareGpuVsCpu(self):,","testShapeIsCorrectAfterOp(self):,","_randomUniformAvoidAnchors(self,,",testGradRandomBoxes(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/image_ops.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/image_ops_impl.py,"_assert(cond,,","_is_tensor(x):,","_ImageDimensions(image):,","_Check3DImage(image,,","_CheckAtLeast3DImage(image):,","fix_image_flip_shape(image,,","random_flip_up_down(image,,","random_flip_left_right(image,,","flip_left_right(image):,","flip_up_down(image):,","rot90(image,,","_rot90():,","_rot180():,","_rot270():,","transpose_image(image):,","central_crop(image,,","pad_to_bounding_box(image,,","crop_to_bounding_box(image,,","resize_image_with_crop_or_pad(image,,","max_(x,,","min_(x,,","equal_(x,,","resize_images(images,,","per_image_standardization(image):,","random_brightness(image,,","random_contrast(image,,","adjust_brightness(image,,","adjust_contrast(images,,","adjust_gamma(image,,","convert_image_dtype(image,,","rgb_to_grayscale(images,,","grayscale_to_rgb(images,,","random_hue(image,,","adjust_hue(image,,","random_saturation(image,,","adjust_saturation(image,,","decode_image(contents,,","_gif():,","_png():,","check_png():,","_jpeg():,","total_variation(images,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/image_ops_test.py,"testBatch(self):,","testRGBToHSVRoundTrip(self):,","_RGBToGrayscale(self,,","_TestRGBToGrayscale(self,,","testBasicRGBToGrayscale(self):,","testBasicGrayscaleToRGB(self):,","testShapeInference(self):,","test_adjust_gamma_one(self):,","test_adjust_gamma_zero(self):,","test_adjust_gamma_less_one(self):,","test_adjust_gamma_greater_one(self):,","testAdjustNegativeHue(self):,","testAdjustPositiveHue(self):,","_adjustHueNp(self,,","_adjustHueTf(self,,","testAdjustRandomHue(self):,","testInvalidShapes(self):,","_benchmarkAdjustHue(self,,","benchmarkAdjustHueCpu1(self):,","benchmarkAdjustHueCpuAll(self):,","benchmarkAdjustHueGpu(self):,","_benchmarkAdjustSaturation(self,,","benchmarkAdjustSaturationCpu1(self):,","benchmarkAdjustSaturationCpuAll(self):,","benchmarkAdjustSaturationGpu(self):,","_benchmarkResize(self,,","benchmarkSimilar(self):,","benchmarkScaleUp(self):,","benchmarkScaleDown(self):,","_benchmarkResize(self,,","benchmarkSimilar(self):,","benchmarkScaleUp(self):,","benchmarkScaleDown(self):,","testHalfSaturation(self):,","testTwiceSaturation(self):,","_adjust_saturation(self,,","testHalfSaturationFused(self):,","testTwiceSaturationFused(self):,","_adjustSaturationNp(self,,","testAdjustRandomSaturation(self):,","testIdempotentLeftRight(self):,","testLeftRight(self):,","testRandomFlipLeftRight(self):,","testIdempotentUpDown(self):,","testUpDown(self):,","testRandomFlipUpDown(self):,","testIdempotentTranspose(self):,","testTranspose(self):,","testPartialShapes(self):,","testRot90GroupOrder(self):,","testRot90NumpyEquivalence(self):,","testRandomLeftRight(self):,","testRandomUpDown(self):,","_testContrast(self,,","testDoubleContrastUint8(self):,","testDoubleContrastFloat(self):,","testHalfContrastUint8(self):,","testBatchDoubleContrast(self):,","_adjustContrastNp(self,,","_adjustContrastTf(self,,","testRandomContrast(self):,","_testBrightness(self,,","testPositiveDeltaUint8(self):,","testPositiveDeltaFloat(self):,","testNegativeDelta(self):,","_NumpyPerImageWhitening(self,,","testBasic(self):,","testUniformImage(self):,","_CropToBoundingBox(self,,","_assertReturns(self,,","_assertRaises(self,,","_assertShapeInference(self,,","testNoOp(self):,","testCrop(self):,","testShapeInference(self):,","testNon3DInput(self):,","testZeroLengthInput(self):,","testBadParams(self):,","_assertShapeInference(self,,","testNoOp(self):,","testCropping(self):,","testShapeInference(self):,","testError(self):,","_PadToBoundingBox(self,,","_assertReturns(self,,","_assertRaises(self,,","_assertShapeInference(self,,","testNoOp(self):,","testPadding(self):,","testShapeInference(self):,","testNon3DInput(self):,","testZeroLengthInput(self):,","testBadParams(self):,","_testSampleDistortedBoundingBox(self,,","testWholeImageBoundingBox(self):,","testWithBoundingBox(self):,","testSampleDistortedBoundingBoxShape(self):,","_assertShapeInference(self,,","shouldRunOnGPU(self,,","testNoOp(self):,","testTensorArguments(self):,","testSumTensor(self):,","testResizeDown(self):,","testResizeUp(self):,","testResizeUpBicubic(self):,","testResizeDownArea(self):,","testCompareNearestNeighbor(self):,","testCompareBilinear(self):,","testShapeInference(self):,","_ResizeImageWithCropOrPad(self,,","_assertReturns(self,,","_assertRaises(self,,","_assertShapeInference(self,,","testNoOp(self):,","testPad(self):,","testCrop(self):,","testCropAndPad(self):,","testShapeInference(self):,","testNon3DInput(self):,","testZeroLengthInput(self):,","testBadParams(self):,","_SimpleColorRamp():,","averageError(self,,","testExisting(self):,","testCmyk(self):,","testSynthetic(self):,","testSyntheticFasterAlgorithm(self):,","testDefaultDCTMethodIsIntegerFast(self):,","testShape(self):,","testExisting(self):,","testSynthetic(self):,","testSyntheticUint16(self):,","testSyntheticTwoChannel(self):,","testSyntheticTwoChannelUint16(self):,","testShape(self):,","testValid(self):,","testInValid(self):,","testShape(self):,","_convert(self,,","testNoConvert(self):,","testConvertBetweenInteger(self):,","testConvertBetweenFloat(self):,","testConvertBetweenIntegerAndFloat(self):,","testConvertBetweenInt16AndInt8(self):,","_test(self,,","_total_variation_np(self,,","_test_tensorflow_vs_numpy(self,,","_generateArray(self,,","testTotalVariationNumpy(self):,",testTotalVariationHandmade(self):
E:/DR/tensorflow/python/ops/init_ops.py,"_initializer(shape,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","__init__(self,,","__call__(self,,","glorot_uniform_initializer(seed=None,,","glorot_normal_initializer(seed=None,,","_compute_fans(shape):,",_assert_float_dtype(dtype):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/io_ops.py,"_save(filename,,","_restore_slice(file_pattern,,","__init__(self,,","reader_ref(self):,","read(self,,","read_up_to(self,,","num_records_produced(self,,","num_work_units_completed(self,,","serialize_state(self,,","restore_state(self,,","supports_serialize(self):,","reset(self,,","__init__(self,,","__init__(self,,","__init__(self,,","__init__(self,,","__init__(self,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/linalg_grad.py,"_MatrixInverseGrad(op,,","_MatrixDeterminantGrad(op,,","_CholeskyGrad(op,,","_MatrixSolveGrad(op,,","_MatrixSolveLsGrad(op,,","_overdetermined(op,,","_underdetermined(op,,","_MatrixTriangularSolveGrad(op,,","_SelfAdjointEigV2Grad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/linalg_ops.py,"cholesky_solve(chol,,","eye(num_rows,,","matrix_solve_ls(matrix,,","self_adjoint_eig(tensor,,","self_adjoint_eigvals(tensor,,","svd(tensor,,","norm(tensor,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/logging_ops.py,"Print(input_,,","_PrintGrad(op,,","_Collect(val,,","histogram_summary(tag,,","image_summary(tag,,","audio_summary(tag,,","merge_summary(inputs,,","merge_all_summaries(key=ops.GraphKeys.SUMMARIES):,","get_summary_op():,","scalar_summary(tags,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/math_grad.py,"_safe_shape_div(x,,","_SumGrad(op,,","_MinOrMaxGrad(op,,","_MaxGrad(op,,","_MinGrad(op,,","_MeanGrad(op,,","_ProdGrad(op,,","_SegmentSumGrad(op,,","_SegmentMeanGrad(op,,","_SparseSegmentSumGrad(op,,","_SparseSegmentMeanGrad(op,,","_SparseSegmentSqrtNGrad(op,,","_SegmentMinOrMaxGrad(op,,","_SegmentMinGrad(op,,","_SegmentMaxGrad(op,,","_UnsortedSegmentSumGrad(op,,","_AbsGrad(op,,","_NegGrad(_,,","_InvGrad(op,,","_ReciprocalGrad(op,,","_InvGradGrad(op,,","_ReciprocalGradGrad(op,,","_SquareGrad(op,,","_SqrtGrad(op,,","_SqrtGradGrad(op,,","_RsqrtGrad(op,,","_RsqrtGradGrad(op,,","_ExpGrad(op,,","_Expm1Grad(op,,","_LogGrad(op,,","_Log1pGrad(op,,","_TanhGrad(op,,","_TanhGradGrad(op,,","_ErfGrad(op,,","_ErfcGrad(op,,","_LgammaGrad(op,,","_DigammaGrad(op,,","_IgammaGrad(op,,","_IgammacGrad(op,,","_ZetaGrad(op,,","_PolygammaGrad(op,,","_SigmoidGrad(op,,","_SigmoidGradGrad(op,,","_SignGrad(op,,","_SinGrad(op,,","_CosGrad(op,,","_TanGrad(op,,","_AsinGrad(op,,","_AcosGrad(op,,","_AtanGrad(op,,","_AddNGrad(op,,","_AddGrad(op,,","_SubGrad(op,,","_MulGrad(op,,","_DivGrad(op,,","_FloorDivGrad(_,,","_TruncateDivGrad(_,,","_RealDivGrad(op,,","_PowGrad(op,,","_MaximumMinimumGrad(op,,","_MaximumGrad(op,,","_MinimumGrad(op,,","_SquaredDifferenceGrad(op,,","_SelectGrad(op,,","_MatMulGrad(op,,","_SparseMatMulGrad(op,,","_SparseMatMul(t1,,","_FloorGrad(_,,","_CeilGrad(_,,","_RoundGrad(_,,","_RintGrad(_,,","_BatchMatMul(op,,","_ComplexGrad(op,,","_RealGrad(_,,","_ImagGrad(_,,","_ConjGrad(_,,","_ComplexAbsGrad(op,,","_CastGrad(op,,","_FFTSizeForGrad(grad,,","_FFTGrad(_,,","_IFFTGrad(_,,","_FFT2DGrad(_,,","_IFFT2DGrad(_,,","_FFT3DGrad(_,,","_IFFT3DGrad(_,,","_CrossGrad(op,,","_CumsumGrad(op,,","_CumprodGrad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/math_grad_test.py,"_testGrad(self,,","testGrad(self):,","_biasedRandN(self,,","_testGrad(self,,","testComplexAbs(self):,","testMinGradient(self):,","testMaxGradient(self):,","testSegmentMinGradient(self):,","testSegmentMaxGradient(self):,","testSegmentMinGradientWithTies(self):,",testSegmentMaxGradientWithTies(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/math_ops.py,"argmax(input,,","argmin(input,,","abs(x,,","__init__(self,,","__truediv__(self,,","__floordiv__(self,,","__div__(self,,","divide(x,,","multiply(x,,","_mul(x,,","subtract(x,,","_sub(x,,","negative(x,,","_neg(x,,","sign(x,,","square(x,,","sqrt(x,,","erf(x,,","scalar_mul(scalar,,","pow(x,,","complex(real,,","real(input,,","imag(input,,","round(x,,","cast(x,,","saturate_cast(value,,","to_float(x,,","to_double(x,,","to_int32(x,,","to_int64(x,,","to_bfloat16(x,,","_OverrideBinaryOperatorHelper(func,,","binary_op_wrapper(x,,","binary_op_wrapper_sparse(sp_x,,","r_binary_op_wrapper(y,,","_sparse_dense_truediv(sp_indices,,","_truediv_python3(x,,","_div_python2(x,,","truediv(x,,","div(x,,","floordiv(x,,","_mul_dispatch(x,,","logical_xor(x,,","range(start,,","_ReductionDims(x,,","reduce_sum(input_tensor,,","count_nonzero(input_tensor,,","reduce_mean(input_tensor,,","reduce_prod(input_tensor,,","reduce_min(input_tensor,,","reduce_max(input_tensor,,","reduce_all(input_tensor,,","reduce_any(input_tensor,,","reduce_logsumexp(input_tensor,,","trace(x,,","matmul(a,,","_calc_mat_mul_flops(graph,,","_as_indexed_slices(x,,","_as_indexed_slices_list(inputs,,","add_n(inputs,,","accumulate_n(inputs,,","sigmoid(x,,","tanh(x,,","cumsum(x,,","cumprod(x,,","conj(x,,","_BroadcastShape(op):,","reduced_shape(input_shape,,","tensordot(a,,","_tensordot_reshape(a,,","_tensordot_axes(a,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/math_ops_test.py,"testReduceAllDims(self):,","testReduceExplicitAxes(self):,","testReduceInvalidAxis(self):,","testReduceLogSumExp(self):,","testReductionIndices(self):,","testReductionIndices2(self):,","testKeepDims(self):,","testOverflow(self):,","testUnderflow(self):,","testRounding(self):,","testFloat(self):,","testFixed(self):,","testSquaredDifference(self):,","testAcceptsRefs(self):,","testAcceptsConstant(self):,","testAcceptsTensor(self):,","testAcceptsIndexedSlices(self):,","testFloat(self):,","testInt(self):,","intTestData(self):,","floatTestData(self):,","testFloorModInt(self):,","testFloorModFloat(self):,","testTruncateModInt(self):,","testTruncateModFloat(self):,","testDivideInt(self):,","testDivideName(self):,","testRealDiv(self):,","testComplexDiv(self):,","testFloorDivGrad(self):,",testConsistent(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/metrics.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/metrics_impl.py,"_local_variable(initial_value,,","_remove_squeezable_dimensions(predictions,,","_maybe_expand_labels(labels,,","_create_local(name,,","_safe_div(numerator,,","_safe_scalar_div(numerator,,","mean(values,,","accuracy(labels,,","_confusion_matrix_at_thresholds(,","auc(labels,,","compute_auc(tp,,","mean_absolute_error(labels,,","mean_cosine_distance(labels,,","mean_iou(labels,,","compute_mean_iou(name):,","mean_relative_error(labels,,","mean_squared_error(labels,,","mean_tensor(values,,","compute_mean(total,,","percentage_below(values,,","_count_condition(values,,","true_positives(labels,,","false_positives(labels,,","precision(labels,,","compute_precision(tp,,","precision_at_thresholds(labels,,","compute_precision(tp,,","false_negatives(labels,,","recall(labels,,","compute_recall(true_p,,","_at_k_name(name,,","_select_class_id(ids,,","_maybe_select_class_id(labels,,","_sparse_true_positive_at_k(labels,,","_streaming_sparse_true_positive_at_k(labels,,","_sparse_false_negative_at_k(labels,,","_streaming_sparse_false_negative_at_k(labels,,","recall_at_k(labels,,","recall_at_thresholds(labels,,","compute_recall(tp,,","root_mean_squared_error(labels,,","sensitivity_at_specificity(,","compute_sensitivity_at_specificity(tp,,","_expand_and_tile(tensor,,","_num_relevant(labels,,","_sparse_average_precision_at_k(labels,,","sparse_average_precision_at_k(labels,,","_sparse_false_positive_at_k(labels,,","_streaming_sparse_false_positive_at_k(labels,,","sparse_precision_at_k(labels,,","specificity_at_sensitivity(,","compute_specificity_at_sensitivity(tp,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_batchnorm_test.py,"_npBatchNorm(self,,","_opsBatchNorm(self,,","_tfBatchNormV1(self,,","_tfBatchNormV1BW(self,,","_tfBatchNormV2(self,,","testBatchNorm(self):,","_testBatchNormGradient(self,,","_testBatchNormGradientInAllNeedConfigs(self,,","testBatchNormInputGradient(self):,","testBatchNormMeanGradient(self):,","testBatchNormVarianceGradient(self):,","testBatchNormBetaGradient(self):,","testBatchNormGammaGradient(self):,","testBatchNormGradImpl(self):,","testBatchNormKeepDims(self):,","_testBatchNormArbitraryShapes(self,,","testBatchNormArbitraryShapes(self):,","_npSuffStats(self,,","_opSuffStats(self,,","_testSuffStats(self,,","testSuffStats(self):,","_npNormalizeMoments(self,,","_opNormalizeMoments(self,,","_testNormalizeMoments(self,,","testNormalizeMoments(self):,","_unweighted_moments(self,,","RunMomentTestWithDynamicShape(self,,","RunMomentTest(self,,","testBasic(self):,","testGlobalNormalization(self):,","testAxes(self):,","_testGlobalGradient(self,,","testMeanGlobalGradient(self):,","testVarGlobalGradient(self):,","_unweighted_moments(self,,","RunMomentTest(self,,","RunMomentTestWithDynamicShape(self,,","RunWeightedMomentTest(self,,",_np_weighted_sum(v):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_fused_batchnorm_test.py,"_inference_ref(self,,","_test_inference(self,,","_training_ref(self,,","_test_training(self,,","_test_gradient(self,,","testInference(self):,","testTraining(self):,",testBatchNormGrad(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_grad.py,"_Conv2DBackpropInputGrad(op,,","_Conv2DBackpropFilterGrad(op,,","_Conv3DGrad(op,,","_Conv3DBackpropInputGrad(op,,","_Conv3DBackpropFilterGrad(op,,","_AvgPool3DGrad(op,,","_MaxPool3DGrad(op,,","_SoftmaxGrad(op,,","_LogSoftmaxGrad(op,,","_BiasAddGrad(op,,","_BiasAddGradGrad(op,,","_BiasAddGradV1(unused_bias_op,,","_ReluGrad(op,,","_EluGradGrad(op,,","_Relu6Grad(op,,","_EluGrad(op,,","_SoftplusGrad(op,,","_SoftsignGrad(op,,","_ReluGradGrad(op,,","_BroadcastMul(vec,,","_SoftmaxCrossEntropyWithLogitsGrad(op,,","_SparseSoftmaxCrossEntropyWithLogitsGrad(op,,","_Conv2DGrad(op,,","_DepthwiseConv2dNativeGrad(op,,","_Dilation2DGrad(op,,","_LRNGrad(op,,","_AvgPoolGrad(op,,","_MaxPoolGrad(op,,","_FractionalMaxPoolGrad(op,,","_FractionalAvgPoolGrad(op,,","_BatchNormWithGlobalNormalizationGrad(op,,","_FusedBatchNormGrad(op,,","_L2LossGrad(op,,","_TopKGrad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_impl.py,"log_poisson_loss(targets,,","sigmoid_cross_entropy_with_logits(_sentinel=None,,","weighted_cross_entropy_with_logits(targets,,","relu_layer(x,,","l2_normalize(x,,","zero_fraction(value,,","depthwise_conv2d(input,,","op(input_converted,,","separable_conv2d(input,,","op(input_converted,,","sufficient_statistics(x,,","normalize_moments(counts,,","moments(x,,","weighted_moments(x,,","batch_normalization(x,,","fused_batch_norm(,","batch_norm_with_global_normalization(t,,","_sum_rows(x):,","_compute_sampled_logits(weights,,","nce_loss(weights,,","sampled_softmax_loss(weights,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_ops.py,"_non_atrous_convolution(input,,","with_space_to_batch(input,,","combined_op(converted_input,,","combined_op(converted_input,,","adjust(orig,,","_get_strides_and_dilation_rate(num_spatial_dims,,","convolution(input,,","op(input_converted,,","pool(input,,","op(converted_input,,","atrous_conv2d(value,,","conv2d_transpose(value,,","atrous_conv2d_transpose(value,,","conv3d_transpose(value,,","bias_add(value,,","bias_add_v1(value,,","crelu(features,,","relu6(features,,","_flatten_outer_dims(logits):,","_softmax(logits,,","_swap_axis(logits,,","softmax(logits,,","log_softmax(logits,,","_ensure_xent_args(name,,","softmax_cross_entropy_with_logits(_sentinel=None,,","_move_dim_to_end(tensor,,","sparse_softmax_cross_entropy_with_logits(_sentinel=None,,","avg_pool(value,,","max_pool(value,,","_calc_conv_flops(graph,,","_calc_depthwise_conv_flops(graph,,","_calc_bias_add_flops(graph,,","xw_plus_b(x,,","xw_plus_b_v1(x,,","dropout(x,,","top_k(input,,","conv1d(value,,","_calc_dilation2d_flops(graph,,","erosion2d(value,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_test.py,"_ZeroFraction(self,,","testZeroFraction(self):,","testZeroFractionEmpty(self):,","_softmax(self,,","testSoftmax(self):,","testGradient(self):,","_log_poisson_loss(self,,","testLogPoissonLoss(self):,","testGradient(self):,","_log_softmax(self,,","testLogSoftmax(self):,","testGradient(self):,","testL2Loss(self):,","testGradient(self):,","_l2Normalize(self,,","testL2Normalize(self):,","testL2NormalizeDimArray(self):,","testL2NormalizeGradient(self):,","testDropout(self):,","testShapedDropout(self):,","testShapedDropoutCorrelation(self):,","testDropoutPlaceholderKeepProb(self):,","testShapedDropoutUnknownShape(self):,","testInvalidKeepProb(self):,","testShapedDropoutShapeError(self):,","testNoDropoutFast(self):,","setUp(self):,","_GenerateTestInputs(self):,","_ComputeSampledLogitsNP(self,,","_ComputeSampledLogitsTF(self,,","testComputeSampledLogitsShapes(self):,","testComputeSampledLogitsValues(self):,","testNCELoss(self):,","_SigmoidCrossEntropyWithLogits(logits,,","testSampledSoftmaxLoss(self):,","_SoftmaxCrossEntropyWithLogits(logits,,","test(self):,","doOutputTest(self,,","testOutput2DInput0(self):,","testOutput2DInput1(self):,","testOutput2DInput01(self):,","testOutput4DInput0(self):,","testOutput4DInput1(self):,","testOutput4DInput3(self):,","testOutput4DInput012(self):,","testOutput4DInput123(self):,",testUnstableOutputShiftNone(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/nn_xent_test.py,"_SigmoidCrossEntropyWithLogits(self,,","_Inputs(self,,","testConstructionNamed(self):,","testLogisticOutput(self):,","testLogisticOutputMultiDim(self):,","testGradient(self):,","testGradientAtZero(self):,","testShapeError(self):,","_WeightedCrossEntropy(self,,","_Inputs(self,,","testConstructionNamed(self):,","testOutput(self):,","testOutputMultiDim(self):,","testGradient(self):,",testShapeError(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/numerics.py,"verify_tensor_all_finite(t,,",add_check_numerics_ops():,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/parsing_ops.py,"_features_to_raw_params(features,,","_construct_sparse_tensors_for_sparse_features(features,,","parse_example(serialized,,","_parse_example_raw(serialized,,","parse_single_example(serialized,,","_parse_single_example_raw(serialized,,","parse_single_sequence_example(,","_parse_single_sequence_example_raw(serialized,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/partitioned_variables.py,"variable_axis_size_partitioner(,","_partitioner(shape,,","min_max_variable_partitioner(max_partitions=1,,","_partitioner(shape,,","fixed_size_partitioner(num_shards,,","_partitioner(shape,,",create_partitioned_variables(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/quantized_conv_ops_test.py,"__init__(self,,","_VerifyValues(self,,","_assertQuantizedArrayEquals(self,,","_QuantizedOutputToFloat(self,,","testConv2D1x1Filter(self):,","testConv2D2x2Filter(self):,","testConv2D1x2Filter(self):,","testConv2D2x2FilterStride2(self):,",testConv2D2x2FilterStride2Same(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/random_ops.py,"_ShapeTensor(shape):,","random_normal(shape,,","parameterized_truncated_normal(shape,,","truncated_normal(shape,,","random_uniform(shape,,","random_shuffle(value,,","random_crop(value,,","multinomial(logits,,","random_gamma(shape,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/resources.py,"register_resource(handle,,","shared_resources():,","local_resources():,","report_uninitialized_resources(resource_list=None,,","initialize_resources(resource_list,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/resource_variable_ops.py,"_register_variable_read(read,,","__init__(self,,","dtype(self):,","device(self):,","name(self):,","get_shape(self):,","create(self):,","handle(self):,","value(self):,","_as_graph_element(self):,","initializer(self):,","op(self):,","eval(self,,","_set_save_slice_info(self,,","_get_save_slice_info(self):,","read_value(self,,","sparse_read(self,,","_OverloadAllOperators():,","_AsTensor(self):,","_OverloadOperator(operator):,","_run_op(a,,","assign_sub(self,,","assign_add(self,,","assign(self,,","_dense_var_to_tensor(var,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/rnn.py,"_infer_state_dtype(explicit_dtype,,","_on_device(fn,,","_rnn_step(,","_copy_one_through(output,,","_copy_some_through(flat_new_output,,","_maybe_copy_some_through():,","_reverse_seq(input_seq,,","bidirectional_dynamic_rnn(cell_fw,,","dynamic_rnn(cell,,","_assert_has_shape(x,,","_dynamic_rnn_loop(cell,,","_create_zero_arrays(size):,","_create_ta(name,,","_time_step(time,,","raw_rnn(cell,,","loop_fn(time,,","condition(unused_time,,","body(time,,","_copy_some_through(current,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/rnn_cell_impl.py,"_state_size_with_prefix(state_size,,","__call__(self,,","state_size(self):,","output_size(self):,","zero_state(self,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/script_ops.py,"__init__(self):,","insert(self,,","remove(self,,","_convert(value):,","__call__(self,,","size(self):,","_next_unique_token(self):,","__init__(self,,","__del__(self):,","py_func(func,,",my_func(x):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/sdca_ops.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/session_ops.py,"__init__(self,,","__del__(self):,","__str__(self):,","handle(self):,","eval(self):,","delete(self):,","get_raw_handle(self):,","_get_device_name(handle):,","_get_reader_key(handle):,","_get_deleter_key(handle):,","_get_mover_key(feeder,,","get_session_handle(data,,","get_session_tensor(handle,,","delete_session_tensor(handle,,","_register_handle_feeder(graph,,","_get_handle_feeder(graph,,","_get_handle_reader(graph,,","_get_handle_mover(graph,,","_get_handle_deleter(graph,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/sets.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/sets_impl.py,"set_size(a,,","_convert_to_tensors_or_sparse_tensors(a,,","_set_operation(a,,","set_intersection(a,,","set_difference(a,,","set_union(a,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/sparse_grad.py,"_SparseReorderGrad(op,,","_SparseAddGrad(op,,","_SparseTensorDenseAddGrad(op,,","_SparseReduceSumGrad(op,,","_SparseTensorDenseMatMulGrad(op,,","_SparseDenseCwiseAddGrad(unused_op,,","_SparseDenseCwiseMulOrDivGrad(op,,","_SparseDenseCwiseMulGrad(op,,","_SparseDenseCwiseDivGrad(op,,","_SparseSoftmaxGrad(op,,","_SparseSparseMaximumGrad(unused_op,,","_SparseSparseMinimumGrad(unused_op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/sparse_ops.py,"_convert_to_sparse_tensor(sp_input):,","_convert_to_sparse_tensors(sp_inputs):,","sparse_concat(axis,,","sparse_add(a,,","sparse_dense_cwise_add(sp_t,,","sparse_reorder(sp_input,,","sparse_reshape(sp_input,,","__repr__(self):,","sparse_split(keyword_required=KeywordRequired(),,","sparse_to_dense(sparse_indices,,","sparse_reduce_sum(sp_input,,","sparse_reduce_sum_sparse(sp_input,,","sparse_tensor_to_dense(sp_input,,","sparse_to_indicator(sp_input,,","sparse_merge(sp_ids,,","sparse_retain(sp_input,,","sparse_reset_shape(sp_input,,","sparse_fill_empty_rows(sp_input,,","serialize_sparse(sp_input,,","serialize_many_sparse(sp_input,,","deserialize_many_sparse(serialized_sparse,,","sparse_tensor_dense_matmul(sp_a,,","sparse_softmax(sp_input,,","sparse_maximum(sp_a,,","sparse_minimum(sp_a,,","sparse_transpose(sp_input,,","_add_sparse_to_tensors_map(sp_input,,","_add_many_sparse_to_tensors_map(sp_input,,",_take_many_sparse_from_tensors_map(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/special_math_ops.py,"lbeta(x,,","nonempty_lbeta():,","empty_lbeta():,","einsum(equation,,","_einsum_reduction(t0,,","sort_key(input_index,,","_transpose_if_necessary(tensor,,","_reshape_if_necessary(tensor,,","_total_size(shape_values):,","_exponential_space_einsum(equation,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/special_math_ops_test.py,"test_one_dimensional_arg(self):,","test_one_dimensional_arg_dynamic_alloc(self):,","test_two_dimensional_arg(self):,","test_two_dimensional_arg_dynamic_alloc(self):,","test_two_dimensional_proper_shape(self):,","test_complicated_shape(self):,","test_length_1_last_dimension_results_in_one(self):,","test_empty_rank2_or_greater_input_gives_empty_output(self):,","test_empty_rank2_or_greater_input_gives_empty_output_dynamic_alloc(self):,","test_empty_rank1_input_raises_value_error(self):,","test_empty_rank1_dynamic_alloc_input_raises_op_error(self):,","test_simple(self):,","test_long(self):,","test_invalid(self):,","test_dim_mismatch(self):,","run_test(self,,",test_input_is_placeholder(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/split_benchmark.py,"build_graph(device,,","_run_graph(self,,",benchmark_split(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/standard_ops.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/state_grad.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/state_ops.py,"variable_op(shape,,","variable_op_v2(shape,,","init_variable(v,,","is_variable_initialized(ref,,","assign_sub(ref,,","assign_add(ref,,","assign(ref,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/string_ops.py,"string_split(source,,","_reduce_join_reduction_dims(x,,","reduce_join(inputs,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/summary_ops.py,"_Collect(val,,",tensor_summary(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/template.py,"make_template(name_,,","my_op(x,,","my_op(x,,","_skip_common_stack_elements(stacktrace,,","__init__(self,,","_call_func(self,,","__call__(self,,","variable_scope(self):,",var_scope(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/tensor_array_grad.py,"_GetGradSource(op_or_tensor):,","_TensorArrayReadGrad(op,,","_TensorArrayWriteGrad(op,,","_TensorArrayGatherGrad(op,,","_TensorArrayScatterGrad(op,,","_TensorArrayConcatGrad(op,,","_TensorArraySplitGrad(op,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/tensor_array_ops.py,"_maybe_set_device(handle_op,,","__init__(self,,","flow(self):,","dtype(self):,","handle(self):,","_merge_element_shape(self,,","identity(self):,","grad(self,,","read(self,,","write(self,,","stack(self,,","gather(self,,","concat(self,,","unstack(self,,","scatter(self,,","split(self,,","size(self,,","close(self,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/variables.py,"__init__(self,,","__str__(self):,","_init_from_args(self,,","_init_from_proto(self,,","_as_graph_element(self):,","_AsTensor(self):,","__iter__(self):,","value(self):,","read_value(self):,","_ref(self):,","set_shape(self,,","eval(self,,","initialized_value(self):,","initial_value(self):,","assign(self,,","assign_add(self,,","assign_sub(self,,","scatter_sub(self,,","count_up_to(self,,","load(self,,","_TensorConversionFunction(v,,","_OverloadAllOperators():,","_OverloadOperator(operator):,","_run_op(a,,","name(self):,","initializer(self):,","device(self):,","dtype(self):,","op(self):,","graph(self):,","get_shape(self):,","to_proto(self,,","from_proto(variable_def,,","__init__(self,,","spec(self):,","to_proto(self,,","_set_save_slice_info(self,,","_get_save_slice_info(self):,","__init__(self,,","__iter__(self):,","__next__(self):,","next(self):,","__init__(self,,","__iter__(self):,","__len__(self):,","_partition_axes(self):,","_concat(self):,","as_tensor(self):,","_TensorConversionFunction(v,,","name(self):,","dtype(self):,","get_shape(self):,","_get_variable_list(self):,","_get_partitions(self):,","assign(self,,","global_variables():,","all_variables():,","_all_saveable_objects():,","local_variables():,","model_variables():,","trainable_variables():,","moving_average_variables():,","variables_initializer(var_list,,","initialize_variables(var_list,,","global_variables_initializer():,","initialize_all_variables():,","local_variables_initializer():,","initialize_local_variables():,","is_variable_initialized(variable):,","assert_variables_initialized(var_list=None):,","report_uninitialized_variables(var_list=None,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/variable_scope.py,"__init__(self,,","full_shape(self):,","var_offset(self):,","single_offset(self,,","single_slice_dim(self,,","__init__(self):,","open_variable_scope(self,,","close_variable_subscopes(self,,","variable_scope_count(self,,","get_variable(self,,","custom_getter(getter,,","_true_getter(name,,","_get_partitioned_variable(,","_get_single_variable(self,,","_get_default_initializer(self,,","no_regularizer(_):,","__init__(self,,","name(self):,","original_name_scope(self):,","reuse(self):,","initializer(self):,","dtype(self):,","use_resource(self):,","regularizer(self):,","caching_device(self):,","partitioner(self):,","custom_getter(self):,","reuse_variables(self):,","set_initializer(self,,","set_dtype(self,,","set_use_resource(self,,","set_regularizer(self,,","set_caching_device(self,,","set_partitioner(self,,","set_custom_getter(self,,","get_variable(self,,","_get_partitioned_variable(self,,","get_variable_scope():,","_get_default_variable_store():,","get_variable(name,,","custom_getter(getter,,","get_local_variable(*args,,","_get_partitioned_variable(name,,","_pure_variable_scope(name_or_scope,,","_get_unique_variable_scope(prefix):,","variable_scope(name_or_scope,,","variable_op_scope(values,,","_compute_slice_dim_and_shape(full_shape,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/weights_broadcast_ops.py,"_has_valid_dims(weights_shape,,","_has_valid_nonscalar_shape(,","assert_broadcastable(weights,,","broadcast_weights(weights,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/__init__.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/cloud/bigquery_reader_ops.py,"__init__(self,,","partitions(self,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/cloud/bigquery_reader_ops_test.py,"_ConvertRowToExampleProto(row):,","__init__(self,,","run(self):,","shutdown(self):,","do_GET(self):,","_SetUpQueue(reader):,","setUp(self):,","tearDown(self):,","_ReadAndCheckRowsUsingFeatures(self,,","testReadingSingleRowUsingFeatures(self):,","testReadingMultipleRowsUsingFeatures(self):,",testReadingMultipleRowsUsingColumns(self):,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/cloud/cloud.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/cloud/__init__.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/losses/BUILD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/losses/losses.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/losses/losses_impl.py,"_scale_losses(losses,,","_safe_div(numerator,,","_safe_mean(losses,,","_num_present(losses,,","compute_weighted_loss(,","absolute_difference(,","cosine_distance(,","hinge_loss(labels,,","log_loss(labels,,","mean_pairwise_squared_error(labels,,","mean_squared_error(labels,,","sigmoid_cross_entropy(,","softmax_cross_entropy(,","_remove_squeezable_dimensions(,","sparse_softmax_cross_entropy(labels,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/losses/util.py,"add_loss(loss,,","get_losses(scope=None,,","get_regularization_losses(scope=None):,","get_total_loss(add_regularization_losses=True,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E:/DR/tensorflow/python/ops/losses/__init__.py,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
